[{"content":"This is a guide to allow you to open a Gnome terminal in NixOS via a shortcut (the default one in ubuntu)\nFirst add this config to your configuration.nix :\nprograms.dconf = { enable = true; profiles.user.databases = [ { settings = { \u0026#34;org/gnome/settings-daemon/plugins/media-keys\u0026#34; = { custom-keybindings = [ \u0026#34;/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/\u0026#34; ]; }; \u0026#34;org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0\u0026#34; = { binding = \u0026#34;\u0026lt;Ctrl\u0026gt;\u0026lt;Alt\u0026gt;t\u0026#34;; command = \u0026#34;kgx\u0026#34;; name = \u0026#34;GNOME Console\u0026#34;; }; }; lockAll = true; } ]; }; Then rebuild nixOS via :\nsudo nixos-rebuild switch And then restart your computer, you\u0026rsquo;re good to go !\nnote : you can alway rollback via\nsudo nixos-rebuild switch --rollback sources https://discourse.nixos.org/t/what-command-to-open-the-terminal/36148 https://gitlab.com/engmark/root/-/merge_requests/446/diffs\n","permalink":"https://blog.sdormeau.com/posts/2024-11-09-terminal-shortcut-nixos-ctrlaltt/","summary":"\u003cp\u003eThis is a guide to allow you to \u003cstrong\u003eopen a Gnome terminal in NixOS via a shortcut\u003c/strong\u003e (the default one in ubuntu)\u003c/p\u003e\n\u003cp\u003eFirst add this config to your \u003ccode\u003econfiguration.nix\u003c/code\u003e :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-nix\" data-lang=\"nix\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eprograms\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003edconf \u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e=\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eenable \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eprofiles\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003euser\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003edatabases \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e [\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    settings \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;org/gnome/settings-daemon/plugins/media-keys\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            custom-keybindings \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e [\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            ];\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        };\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            binding \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u0026lt;Ctrl\u0026gt;\u0026lt;Alt\u0026gt;t\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            command \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;kgx\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            name \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;GNOME Console\u0026#34;\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        };\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    };\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    lockAll \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e];\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e};\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen rebuild nixOS via :\u003c/p\u003e","title":"Terminal shortcut nixOS (Ctrl+Alt+T)"},{"content":"I struggled to launch a print job from NixOS on My Canon Pixma TS5050. The solution is actually very simple (credit to this post). You just need to add this to you configuration.nix :\n{config, pkgs, ... }: { # ... services.printing = { enable = true; drivers = [ pkgs.cnijfilter2 ]; }; # ... } and then rebuild your system with : sudo nixos-rebuild switch And that\u0026rsquo;s it !\nEnvironnement Nix 2.18.8 NixOS 24.05 Canon Pixma TS5050 ","permalink":"https://blog.sdormeau.com/posts/2024-11-09-setup-pixma-ts-5050-driver-for-nixos/","summary":"\u003cp\u003eI struggled to launch a print job from NixOS on My Canon Pixma TS5050.\nThe solution is actually very simple (\u003ca href=\"https://medium.com/@f.s.a.kuzman/setting-up-your-local-printer-in-nixos-40c6e1cbb761\"\u003ecredit to this post\u003c/a\u003e).\nYou just need to add this to you \u003ccode\u003econfiguration.nix\u003c/code\u003e :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-nix\" data-lang=\"nix\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{config\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e pkgs\u003cspan style=\"color:#f92672\"\u003e,\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e...\u003c/span\u003e }: \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e{\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e# ...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  services\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003eprinting \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    enable \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    drivers \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e [ pkgs\u003cspan style=\"color:#f92672\"\u003e.\u003c/span\u003ecnijfilter2 ];\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  };\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#75715e\"\u003e# ...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eand then rebuild your system with :\n\u003ccode\u003esudo nixos-rebuild switch \u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eAnd that\u0026rsquo;s it !\u003c/p\u003e\n\u003ch2 id=\"environnement\"\u003eEnvironnement\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eNix 2.18.8\u003c/li\u003e\n\u003cli\u003eNixOS 24.05\u003c/li\u003e\n\u003cli\u003eCanon Pixma TS5050\u003c/li\u003e\n\u003c/ul\u003e","title":"Setup Pixma TS 5050 driver for NixOS"},{"content":"Documentation La liste des librairies standard : https://pkg.go.dev/std\nVariables Elles sont fortement typées et il en existe plusieurs types : bool, string, int, byte, float32, float64 Il existe d\u0026rsquo;autres types comme rune pour l\u0026rsquo;unicode.\nexemple d\u0026rsquo;usage : var age int = 20\nshort syntax : nom := 123\nPremière lettre en :\nMAJUSCULE -\u0026gt; publique minuscule -\u0026gt; privé Module go mod init \u0026lt;nom.go\u0026gt; go mod tidy ajouter ligne import \u0026lt;nom.go\u0026gt;/\u0026lt;dossier\u0026gt; Contrôle de flux if count := 1; count \u0026gt; 1 { ... } la variable count ne sera accessible qu\u0026rsquo;entre les guillemets avec cette syntaxe.\nComme de nombreux langage, il existe le switch :\nswitch \u0026lt;var\u0026gt; { case \u0026lt;1\u0026gt;: // cas 1 case \u0026lt;2\u0026gt;: // cas 2 default: // cas par défaut } ","permalink":"https://blog.sdormeau.com/posts/2024-08-13-apprentissage-golang-partie-2/","summary":"\u003ch3 id=\"documentation\"\u003eDocumentation\u003c/h3\u003e\n\u003cp\u003eLa liste des librairies standard : \u003ca href=\"https://pkg.go.dev/std\"\u003ehttps://pkg.go.dev/std\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id=\"variables\"\u003eVariables\u003c/h2\u003e\n\u003cp\u003eElles sont \u003cstrong\u003efortement typées\u003c/strong\u003e et il en existe plusieurs types : \u003ccode\u003ebool\u003c/code\u003e, \u003ccode\u003estring\u003c/code\u003e, \u003ccode\u003eint\u003c/code\u003e, \u003ccode\u003ebyte\u003c/code\u003e, \u003ccode\u003efloat32\u003c/code\u003e, \u003ccode\u003efloat64\u003c/code\u003e\nIl existe d\u0026rsquo;autres types comme \u003ccode\u003erune\u003c/code\u003e pour l\u0026rsquo;unicode.\u003c/p\u003e\n\u003cp\u003eexemple d\u0026rsquo;usage  : \u003ccode\u003evar age int = 20\u003c/code\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eshort syntax : \u003ccode\u003enom := 123\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003ePremière lettre en :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMAJUSCULE -\u0026gt; publique\u003c/li\u003e\n\u003cli\u003eminuscule -\u0026gt; privé\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"module\"\u003eModule\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003ego mod init \u0026lt;nom.go\u0026gt;\u003c/li\u003e\n\u003cli\u003ego mod tidy\u003c/li\u003e\n\u003cli\u003eajouter ligne import \u003ccode\u003e\u0026lt;nom.go\u0026gt;/\u0026lt;dossier\u0026gt;\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"contrôle-de-flux\"\u003eContrôle de flux\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ecount\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e; \u003cspan style=\"color:#a6e22e\"\u003ecount\u003c/span\u003e \u0026gt; \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#f92672\"\u003e...\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ela variable \u003ccode\u003ecount\u003c/code\u003e ne sera accessible qu\u0026rsquo;entre les guillemets avec cette syntaxe.\u003c/p\u003e","title":"Apprentissage de Golang 🐀 - partie 2"},{"content":"Conversion de type (casting) exemple :\nvar a := int(\u0026#34;2\u0026#34;) fonctions func nom(param1 int, param2 string) string {} La logique publique/privé s\u0026rsquo;applique toujours avec la première lettre en majuscule ou minuscule.\nretour multiples func nom() (int, string) { return 1, \u0026#34;example\u0026#34; } // first var ignored _, text := nom() Array Les tableaux ont une taille fixe\nvar nom[5]int // ou bien tableau := [3]string{\u0026#34;bob\u0026#34;, \u0026#34;moran\u0026#34;} Slices Un Slice est un \u0026ldquo;array de taille dynamique\u0026rdquo;\nnums := make([]int, \u0026lt;taille\u0026gt;, \u0026lt;capacité\u0026gt;) on double toujours la capacité initiale. Deux fonctions utiles pour vérifier capacité et taille sont : len() et cap()\nboucle for for \u0026lt;initialisation\u0026gt;;\u0026lt;condition\u0026gt;;\u0026lt;action\u0026gt; { // action } boucle while for \u0026lt;condition\u0026gt; { // action } forever for { // action } ","permalink":"https://blog.sdormeau.com/posts/2024-08-21-apprentissage-golang-partie-3/","summary":"\u003ch2 id=\"conversion-de-type-casting\"\u003eConversion de type (casting)\u003c/h2\u003e\n\u003cp\u003eexemple :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ea\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e int(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;2\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"fonctions\"\u003efonctions\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003enom\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003eparam1\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eparam2\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e) \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e {}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eLa logique publique/privé s\u0026rsquo;applique toujours avec la première lettre en majuscule ou minuscule.\u003c/p\u003e\n\u003ch3 id=\"retour-multiples\"\u003eretour multiples\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efunc\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003enom\u003c/span\u003e() (\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;example\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// first var ignored\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003e_\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003etext\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003enom\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"array\"\u003eArray\u003c/h2\u003e\n\u003cp\u003eLes tableaux ont une taille fixe\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003evar\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003enom\u003c/span\u003e[\u003cspan style=\"color:#ae81ff\"\u003e5\u003c/span\u003e]\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e// ou bien\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003etableau\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e [\u003cspan style=\"color:#ae81ff\"\u003e3\u003c/span\u003e]\u003cspan style=\"color:#66d9ef\"\u003estring\u003c/span\u003e{\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;bob\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;moran\u0026#34;\u003c/span\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"slices\"\u003eSlices\u003c/h2\u003e\n\u003cp\u003eUn Slice est un \u0026ldquo;array de taille dynamique\u0026rdquo;\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-go\" data-lang=\"go\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003enums\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e:=\u003c/span\u003e make([]\u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e, \u0026lt;\u003cspan style=\"color:#a6e22e\"\u003etaille\u003c/span\u003e\u0026gt;, \u0026lt;\u003cspan style=\"color:#a6e22e\"\u003ecapacité\u003c/span\u003e\u0026gt;)\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eon double toujours la capacité initiale. Deux fonctions utiles pour vérifier capacité et taille sont : \u003ccode\u003elen()\u003c/code\u003e et \u003ccode\u003ecap()\u003c/code\u003e\u003c/p\u003e","title":"Apprentissage de Golang 🐀 - partie 3"},{"content":"$GOPATH Le $GOPATH est une variable système qui détermine l\u0026rsquo;endroit on sont placé les packages go. Ce même chemin contiendra par convention un dossier 🖿 \u0026lt;mon_nom\u0026gt;.go qui contiendra lui-même les projets.\nPackages On peut créer des dossier dans lesquels on découpe le code en plusieurs fichiers. Chaque fichier contient l\u0026rsquo;en-tête package \u0026lt;nom_du_dossier\u0026gt; le nom_du_dossier est une convention.\nexemple :\n🖿 $GOPATH |--- 🖿 src |---- 🖿 sowdowdow.go |\t|---- main.go |\t|---- 🖿 inputs |\t|---- mouse.go \u0026lt;----- première ligne \u0026#34;package inputs\u0026#34; |\t|---- keyboard.go \u0026lt;----- première ligne \u0026#34;package inputs\u0026#34; |---- 🖿 organization.go |---- ... import import \u0026quot;\u0026lt;nom\u0026gt;\u0026quot; permet de récupérer des fonctions, structs\u0026hellip; depuis un autre package (= fichier différent). ensuite on peut faire \u0026lt;nom\u0026gt;.Fonction()\nOrganisation des fichiers ❗ Toujours TOUT stocker à l\u0026rsquo;intérieur du $GOPATH ❗\nconventions de nommage :\nnom de fichier.go en minuscule dossier avec le même nom que le package 🖿 $GOPATH |--- 🖿 bin \u0026lt;---------- contient tous les binaires installés via `go install \u0026lt;nom\u0026gt;` |--- 🖿 pkg \u0026lt;---------- bibliothèques intermédiaires |--- 🖿 src \u0026lt;---------- projets perso triés par organisation |\t|---- 🖿 sowdowdow.go |\t|---- main.go |\t|---- ... sources cours Udemy de Robin Penea, 2022\n","permalink":"https://blog.sdormeau.com/posts/2024-08-08-apprentissage-golang-partie-1/","summary":"\u003ch2 id=\"gopath\"\u003e$GOPATH\u003c/h2\u003e\n\u003cp\u003eLe \u003ccode\u003e$GOPATH\u003c/code\u003e est une variable système qui détermine l\u0026rsquo;endroit on sont placé les packages go.\nCe même chemin contiendra par convention un dossier  🖿 \u003ccode\u003e\u0026lt;mon_nom\u0026gt;.go\u003c/code\u003e qui contiendra lui-même les projets.\u003c/p\u003e\n\u003ch2 id=\"packages\"\u003ePackages\u003c/h2\u003e\n\u003cp\u003eOn peut créer des dossier dans lesquels on découpe le code en plusieurs fichiers.\nChaque fichier contient l\u0026rsquo;en-tête \u003ccode\u003epackage \u0026lt;nom_du_dossier\u0026gt;\u003c/code\u003e le \u003cstrong\u003enom_du_dossier\u003c/strong\u003e est une convention.\u003c/p\u003e\n\u003cp\u003eexemple :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e🖿 $GOPATH\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e|--- 🖿 src\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t|---- 🖿 sowdowdow.go\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t|\t\t|---- main.go\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t|\t\t|---- 🖿 inputs\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t|\t\t\t\t|---- mouse.go \u0026lt;----- première ligne \u0026#34;package inputs\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t|\t\t\t\t|---- keyboard.go  \u0026lt;----- première ligne \u0026#34;package inputs\u0026#34;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t|---- 🖿 organization.go\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\t\t|---- ...\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"import\"\u003eimport\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003eimport \u0026quot;\u0026lt;nom\u0026gt;\u0026quot;\u003c/code\u003e permet de récupérer des fonctions, structs\u0026hellip; depuis un autre package (= fichier différent).\nensuite on peut faire \u003ccode\u003e\u0026lt;nom\u0026gt;.Fonction()\u003c/code\u003e\u003c/p\u003e","title":"Apprentissage de Golang 🐀 - partie 1"},{"content":"Après avoir appris que j\u0026rsquo;aurais la possibilité de travailler avec du Rust en milieu professionnel, j\u0026rsquo;ai commencé à me documenter sur le langage. Et il d\u0026rsquo;avère que pour l\u0026rsquo;apprendre on peut passer par un outil qui s\u0026rsquo;appelle Rustlings.\nC\u0026rsquo;est un ensemble d\u0026rsquo;exercices dans lesquels le but est de débugger et ainsi comprendre les méchaniques et subtilités du langage.\nActualités J\u0026rsquo;ai découvert Activity Watch, rclone et Open Tofu 🟨.\nLe premier est un outil qui permet de suivre l\u0026rsquo;activité d\u0026rsquo;une machine.\nLe second est un outil en CLI qui permet de cloner et synchroniser n\u0026rsquo;importe quel drive (GDrive, Dropbox, OneDrive, etc.) sur sa machine. Super pratique !\nEt le dernier lui est un fork de Terraform. Eh oui, pendant le temps ou je suis partis, une grosse polémique concernant la licence de Terraform s\u0026rsquo;est déroulée. Quelques incidents avec son créateur sont également survenue et il convient donc aujourd de se tourner vers cette nouvelle alternative.\n","permalink":"https://blog.sdormeau.com/posts/2024-07-07-rust--activity-watch/","summary":"\u003cp\u003eAprès avoir appris que j\u0026rsquo;aurais la possibilité de travailler avec du Rust en milieu professionnel, j\u0026rsquo;ai commencé à me documenter sur le langage.\nEt il d\u0026rsquo;avère que pour l\u0026rsquo;apprendre on peut passer par un outil qui s\u0026rsquo;appelle \u003ca href=\"https://github.com/rust-lang/rustlings\"\u003e\u003cstrong\u003eRustlings\u003c/strong\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eC\u0026rsquo;est un ensemble d\u0026rsquo;exercices dans lesquels le but est de débugger et ainsi comprendre les méchaniques et subtilités du langage.\u003c/p\u003e\n\u003ch2 id=\"actualités\"\u003eActualités\u003c/h2\u003e\n\u003cp\u003eJ\u0026rsquo;ai découvert \u003ca href=\"https://activitywatch.net/\"\u003eActivity Watch\u003c/a\u003e, \u003ca href=\"https://rclone.org/\"\u003erclone\u003c/a\u003e et \u003ca href=\"https://opentofu.org/\"\u003eOpen Tofu\u003c/a\u003e 🟨.\u003c/p\u003e\n\u003cp\u003eLe premier est un outil qui permet de suivre l\u0026rsquo;activité d\u0026rsquo;une machine.\u003c/p\u003e","title":"Rust \u0026 Activity Watch 🦀"},{"content":"Après maintenant quelques mois consacrés au sport me voilà de nouveau dans la sphère apprentissage.\nJe viens de recréer une VM Ubuntu 24.04 et cherche à nouveau les derniers outils tendance.\nAtuin J\u0026rsquo;ai ainsi trouvé un utilitaire qui viens remplacer l\u0026rsquo;historique classique linux par une BDD sqlite, permettant d\u0026rsquo;obtenir des stats mais également d\u0026rsquo;avoir un historique beaucoup plus long et potentiellement le synchroniser entre différentes machines.\nCet utilitaire écrit en Rust se nomme Atuin.\n➜ hugo-blog git:(main) ✗ atuin stats [▮▮▮▮▮▮▮▮▮▮] 40 ls [▮▮▮▮▮▮▮▮▮ ] 37 cd [▮▮▮▮▮▮▮▮▮ ] 36 rclone [▮▮▮▮ ] 19 resume [▮▮▮ ] 15 atuin [▮▮ ] 11 resumed [▮▮ ] 11 mkdir [▮▮ ] 11 nano [▮▮ ] 11 npm install [▮▮ ] 10 exit Total commands: 410 Unique commands: 251 exemple d\u0026rsquo;output de Atuin\nFront-Matter Un second outil qui va me permettre également d\u0026rsquo;être plus rapide sur l\u0026rsquo;écriture d\u0026rsquo;article : Front-Matter.\nCette extension pour VSCode permet de gérer beaucoup plus simplement et efficacement le contennu de la pluspart des CMS, et dans mon cas Hugo.\nJSON resume Étant également dans une période de recherche d\u0026rsquo;emploi j\u0026rsquo;ai très régulièrement des demandes concernant des références, un dossier technique, ou bien encore un CV dans un format un peu différent. Souhaitant structurer un peu mieux mon CV actuel, j\u0026rsquo;ai trouvé un outil qui se veux normalisé : JSON Resume.\nCelui-ci comme son nom l\u0026rsquo;indique permet de créer un CV sous forme de JSON et de l\u0026rsquo;exporter au format html/pdf.\nCertifications Depuis maintenant trois ans que j\u0026rsquo;exerce dans le milieu de l\u0026rsquo;IT je n\u0026rsquo;ai pas encore passé de certifications ! Je me suis donc renseigné pour savoir quels sont les formations qui sot les plus valorisés par les entreprises dans le milieu du DevOps, et voici quelques-unes d\u0026rsquo;entre elles :\nDocker Certified Associate (DCA) AWS Certified DevOps Engineer - Professional ou Microsoft Certified: DevOps Engineer Expert ou Google Professional Cloud DevOps Engineer Certified Kubernetes Administrator (CKA) HashiCorp Certified: Terraform Associate Ces certifications coûtent cher et sont chronophage, j\u0026rsquo;ai donc interêt a bien étudier ces dernières avant de me jeter dans le bain. Docker étant l\u0026rsquo;outil que je connais depuis le plus longtemps il me semble cohérent de commencer par la première de ces certifications -\u0026gt; DCA.\nJe vais donc y réfléchir plus sérieusement dans les semaines à venir car se fixer un tel objectif et le découper en étapes est le premier pas vers le succès.\n","permalink":"https://blog.sdormeau.com/posts/2024-06-08-front-matter/","summary":"\u003cp\u003eAprès maintenant quelques mois consacrés au sport me voilà de nouveau dans la sphère apprentissage.\u003c/p\u003e\n\u003cp\u003eJe viens de recréer une VM Ubuntu 24.04 et cherche à nouveau les derniers outils tendance.\u003c/p\u003e\n\u003ch2 id=\"atuin\"\u003eAtuin\u003c/h2\u003e\n\u003cp\u003eJ\u0026rsquo;ai ainsi trouvé un utilitaire qui viens remplacer l\u0026rsquo;historique classique linux par une BDD sqlite, permettant d\u0026rsquo;obtenir des stats mais également d\u0026rsquo;avoir un historique beaucoup plus long et potentiellement le synchroniser entre différentes machines.\u003c/p\u003e\n\u003cp\u003eCet utilitaire écrit en Rust se nomme \u003ca href=\"https://atuin.sh/\"\u003eAtuin\u003c/a\u003e.\u003c/p\u003e","title":"Back to Ubuntu"},{"content":"Maintenant que j\u0026rsquo;ai quitté Django, j\u0026rsquo;ai besoin de vous parler de Sveltekit.\nEn regardant une vidéo plutôt intérressante de Ben Davis j\u0026rsquo;ai décidé de tester un lot de nouvelles technologies qui semblent avoir une bonne synergie.\nà savoir :\nSvelteKit DrizzleORM Vercel PlanetScale SvelteKit 🧡✨ est-ce un Framework, est-ce un Toolkit ? je ne sais pas mais d\u0026rsquo;après wikipedia il est classé comme Framework Web. Il se base sur Svelte, un langage et Framework de composants et lui apporte tout un tas de fonctionnalités pour gérer les requêtes côté client ET côté serveur.\nL\u0026rsquo;un de ces avantages est la possibilité de le déployer sur pleins de plateformes différentes, allant du nodeJS au serverless.\nCependant il manque quelque chose pour créer une appli web dynamique : se connecter a une BDD et un ORM. Et c\u0026rsquo;est là qu\u0026rsquo;intervient Drizzle !\nDrizzleORM 💧 Un ORM puissant et flexible apparu récemment sur le marché. Il promet d\u0026rsquo;être assez proche du SQL natif (moins d\u0026rsquo;abstraction).\nUne comparaison un peu plus détaillée est disponible dans cette vidéo de fireship.\nN\u0026rsquo;ayant jamais utilisé d\u0026rsquo;ORM typescript, je pourrais m\u0026rsquo;avancer un peu plus dessus dans un prochain article.\nPlanetScale \u0026amp; Vercel 💲🏎️ Je place ces deux outils dans le même paragraphe car ils sont tous les deux des solutions SaaS en mode abonnement. Même si c\u0026rsquo;est un point qui me rebute pas mal car cela implique une gestion des coups non maîtrisée, je dois avoué que j\u0026rsquo;ai été bluffé par les deux (free tier disponible).\nIl permettent en contrepartie d\u0026rsquo;un delestage du portemonnaie d\u0026rsquo;accélérer la mise en production drastiquement.\nPlanetScale PlanetScale est une BDD mysql compatible serverless (very nice 👍).\nCelui-ci propose une interface entièrement Web très agréable et un système de branche du SGBD afin de pouvoir séparer la production du développement mais également de rendre les déploiement plus souples.\nVercel De l\u0026rsquo;autre côté Vercel est une plateforme all-in-one de Contiunous Delivery qui permet en quelques clics de mettre en production une application avec du TLS et ça c\u0026rsquo;est incroyable 😮\nEn résumé :\nimport depuis github/gitlab/\u0026hellip; définition des variables d\u0026rsquo;environnements (et un copié collé d\u0026rsquo;un .env suffit 🤩) ajout d\u0026rsquo;un enregistrement dans le DNS et voilà, appli en prod !\nAlors déjà c\u0026rsquo;est très impressionnant, mais en plus de ça, on obtient des déploiements PAR COMMIT 🥲\nEt bien évidemment toutes les logs, les metrics et insight sont également disponibles si on souhaite payer !\nJe me rend compte que je ne vous ai pas encore parlé de Playwright et Vitest\u0026hellip; prochain article hehe\n","permalink":"https://blog.sdormeau.com/posts/2023-10-16-sveltekit-n-co/","summary":"\u003cp\u003eMaintenant que j\u0026rsquo;ai quitté Django, j\u0026rsquo;ai besoin de vous parler de \u003ca href=\"https://kit.svelte.dev/\"\u003eSveltekit\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eEn regardant une vidéo plutôt intérressante de \u003ca href=\"https://www.youtube.com/watch?v=vnkyMcw0TZE\"\u003eBen Davis\u003c/a\u003e j\u0026rsquo;ai décidé de tester un lot de nouvelles technologies qui semblent avoir une bonne synergie.\u003c/p\u003e\n\u003cp\u003eà savoir :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSvelteKit\u003c/li\u003e\n\u003cli\u003eDrizzleORM\u003c/li\u003e\n\u003cli\u003eVercel\u003c/li\u003e\n\u003cli\u003ePlanetScale\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"sveltekit-\"\u003eSvelteKit 🧡✨\u003c/h2\u003e\n\u003cp\u003eest-ce un Framework, est-ce un Toolkit ? je ne sais pas mais d\u0026rsquo;après wikipedia il est classé comme \u003ca href=\"https://en.wikipedia.org/wiki/Svelte\"\u003eFramework Web\u003c/a\u003e. Il se base sur \u003cstrong\u003eSvelte\u003c/strong\u003e, un langage et Framework de composants et lui apporte tout un tas de fonctionnalités pour gérer les requêtes côté client ET côté serveur.\u003c/p\u003e","title":"Sveltekit \u0026 compagnie 🧡"},{"content":"Réflexion Après avoir longtemps réfléchis, je me suis dis que construire une appli web rapidement c\u0026rsquo;est bien, mais dans un monde toujours plus concurrentiel, être capable de faire une app drivé par l\u0026rsquo;UX/UI est un gros avantage et quelque-chose qui e manquais avec django.\nSvelte \u0026amp; SvelteKIT Traditionnellement (aka l\u0026rsquo;ancien monde), une application possède un front-end et un backend. Et en front-end il existe aujourd\u0026rsquo;hui des Frameworks ultra populaires comme React, Vue et Angular.\nCeci-dit, ils ont pour certain la réputation de soit être lent et peu efficace, soit avoir une courbe d\u0026rsquo;apprentissage très pentue.\nEst apparue dans ce bel ecosystème Svelte 🤩, qui propose de la simplicité, et surtout qui est pré-compilé, au lieu d\u0026rsquo;avoir un virtual-DOM (bête noire d\u0026rsquo;Angular et React). Alors forçemment j\u0026rsquo;aime bien faire les choses différemment des autres, et je me suis laissé prendre au jeu.\nEh ben c\u0026rsquo;est pas mal\u0026hellip; franchement ça s\u0026rsquo;apprend très rapidement et on peut faire des choses très puissantes avec !\nIntégration 💻↔️🖥️ Alors pour pousser le délire un peu plus loin j\u0026rsquo;ai essayé de l\u0026rsquo;intégrer avec Django Rest Framework (DRF) en backend.\nPuis je me suis rendu compte qu\u0026rsquo;en fait SvelteKit possède un front ET un back. 🫥\nAlors pour sécuriser les calls à l\u0026rsquo;API Rest de DRF, j\u0026rsquo;ai voulu faire en sorte que ce soit le backend de SvelteKIT qui fasse les requêtes. SAUF qu\u0026rsquo;en fait cela veut dire réécrire toutes les requêtes HTTP en rajoutant dans les en-têtes les cookies sessionid et csrf\u0026hellip;\nultra-fastidieux 😖\nIl y a un problème là non ?\nBen oui on a un front-end et DEUX back-end. Alors pour éviter ça j\u0026rsquo;ai décider de réécrire le tout avec comme unique repository SvelteKit, pour le front ET le back.\nLa suite dans un prochain article (CloudFlare / PlanetScale / Vercel)\n","permalink":"https://blog.sdormeau.com/posts/2023-10-04-goodbye-django/","summary":"\u003ch1 id=\"réflexion\"\u003eRéflexion\u003c/h1\u003e\n\u003cp\u003eAprès avoir longtemps réfléchis, je me suis dis que construire une appli web rapidement c\u0026rsquo;est bien, mais dans un monde toujours plus concurrentiel, être capable de faire une app drivé par l\u0026rsquo;UX/UI est un gros avantage et quelque-chose qui e manquais avec django.\u003c/p\u003e\n\u003ch2 id=\"svelte--sveltekit\"\u003eSvelte \u0026amp; SvelteKIT\u003c/h2\u003e\n\u003cp\u003eTraditionnellement (aka l\u0026rsquo;ancien monde), une application possède un \u003cstrong\u003efront-end\u003c/strong\u003e et un \u003cstrong\u003ebackend\u003c/strong\u003e. Et en front-end il existe aujourd\u0026rsquo;hui des Frameworks ultra populaires comme React, Vue et Angular.\u003c/p\u003e","title":"Goodbye Django 🫡"},{"content":"Nous avons récemment fait face à un problème de taille au sein de mon équipe : la façon par défaut de travailler avec docker sur une machine windows est d\u0026rsquo;installer Docker Desktop. Or cet outil nécéssite une licence payant pour les entreprises de plus de 250 employés.\nComment utiliser docker sur Windows sans passer par Docker Desktop ?\nLe premier reflexe que j\u0026rsquo;ai eu a été d\u0026rsquo;installer Podman Desktop, une interface graphique accompagné d\u0026rsquo;un backend podman, une alternative à Docker que j\u0026rsquo;ai présenté dans l\u0026rsquo;article précédent.\nà première vue très intérressant, celui-ci ne nous a pas spécialement désservie de par ses performances. En effet une build native maven sur la même machine windows à pris ~2min30, tendis que podman aura passé près de 16 minutes pour la même tâche.\nIl a donc fallu chercher ailleurs.\nRancher Desktop Sur les conseils d\u0026rsquo;un DevOps expérimenté, je me suis tourné vers Rancher Desktop, une solution alternative et qui propose plus de flexibilité.\nEffectivement Rancher Desktop embarque un cluster Kubernetes qui tourne dans une instance WSL2 et il est capable de tourner sur deux backends distincts (container engines) : containerd ou dockerd.\nDans un premier temps j\u0026rsquo;ai testé containerd, mais sans succès. Celui-ci nécéssite de fonctionner avec une CLI différente de dockerCLI, autrement dit on ne peut pas utiliser la commande docker \u0026lt;command\u0026gt;, il faut alors passer par la CLI nerdctl, mais celle-ci aura refusé de fonctionner dans notre cas.\nMoby En changeant de container engine, donc de containerd vers dockerd on obtient une commande docker fonctionnelle. L\u0026rsquo;objectif de remplacer Docker Desktop par quelque-chose d\u0026rsquo;autre est atteint ! 🎊\nce fameux container engine dockerd est en fait Moby. Quand le projet Docker à trop grossit, le monolithe a été splitté en plus petits composants. Un ensemble de ces composants s\u0026rsquo;est retrouvé dans le projet Moby.\n","permalink":"https://blog.sdormeau.com/posts/2023-02-03-rancher-desktop-alternative-to-docker/","summary":"\u003cp\u003eNous avons récemment fait face à un problème de taille au sein de mon équipe : la façon par défaut de travailler avec docker sur une machine windows est d\u0026rsquo;installer Docker Desktop. Or cet outil nécéssite une licence payant pour les entreprises de plus de 250 employés.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eComment utiliser docker sur Windows sans passer par Docker Desktop ?\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eLe premier reflexe que j\u0026rsquo;ai eu a été d\u0026rsquo;installer \u003ca href=\"https://podman-desktop.io/\"\u003ePodman Desktop\u003c/a\u003e, une interface graphique accompagné d\u0026rsquo;un backend podman, une alternative à Docker que j\u0026rsquo;ai présenté dans l\u0026rsquo;article précédent.\u003c/p\u003e","title":"Rancher Desktop, an Alternative to Docker"},{"content":"Introduction Dans le cadre de mes fonctions je suis face a une nouvelle problématique : Docker Desktop est la solution \u0026ldquo;Ready to go\u0026rdquo; pour utiliser Docker sur une machine de développement.\nProblème : ce logiciel nécéssite une licence pour les entreprises de plus de 250 salariés.\nIl faut donc lui trouver un remplacement, et là il existe deux options :\ninstaller Docker dans une sous machine linux WSL2 et faire plein de manipulation compliqués tester une solution alternative à Docker Podman Je suis donc parti dans la seconde direction. Découvrant ainsi Podman, un projet open-source qui subvient aux mêmes besoins que Docker.\nEn effet docker créer des containers au format Open Container Initiative (OCI). Ce format est donc un standard et Podman se place en \u0026ldquo;Drop in replacement\u0026rdquo;, donc rien à faire de spécial, on l\u0026rsquo;install et il fonctionne.\nPoint positifs ✅ plus sécurisé de Docker (un mode rootless, un mode rootful) temps de démarrage très rapide (pas de Daemon comme docker) pas besoin de licence pour l\u0026rsquo;utiliser une croissance rapide Point négatifs ❌ pas encore le même support que docker Podman Desktop qui est loin derrière l\u0026rsquo;UI de docker desktop j\u0026rsquo;ai des performances médiocres sur ma machine, mais je ne l\u0026rsquo;ai pas comparé à docker Celui-ci est entouré de tout un ecosystème opensource notamment Buildah sur lequel il se base pour construire les images des Dockerfile.\nEn résumé Il me reste pas mal de tests à faire pour tenter de le configurer correctement et peut-être de le benchmarker contre Docker. Je reviendrais peut-être avec un second article pour en parler. 😉\n","permalink":"https://blog.sdormeau.com/posts/2023-01-25-podman/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cp\u003eDans le cadre de mes fonctions je suis face a une nouvelle problématique : Docker Desktop est la solution \u0026ldquo;Ready to go\u0026rdquo; pour utiliser Docker sur une machine de développement.\u003c/p\u003e\n\u003cp\u003eProblème : ce logiciel nécéssite une licence pour les entreprises de plus de 250 salariés.\u003c/p\u003e\n\u003cp\u003eIl faut donc lui trouver un remplacement, et là il existe deux options :\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003einstaller Docker dans une sous machine linux WSL2 et faire plein de manipulation compliqués\u003c/li\u003e\n\u003cli\u003etester une solution alternative à Docker\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"podman\"\u003ePodman\u003c/h2\u003e\n\u003cp\u003eJe suis donc parti dans la seconde direction. Découvrant ainsi \u003ca href=\"https://podman.io/\"\u003ePodman\u003c/a\u003e, un projet open-source qui subvient aux mêmes besoins que Docker.\u003c/p\u003e","title":"Podman"},{"content":"CoreOS 🌱🐋 J\u0026rsquo;ai découvert hier CoreOS, c\u0026rsquo;est un système d\u0026rsquo;exploitation orienté container en rolling release. Qu\u0026rsquo;est-ce que ça veut dire ce charabiat ? Et bien une rolling release, c\u0026rsquo;est un OS qui est tout le temps à jour.\nL\u0026rsquo;orientation container elle s\u0026rsquo;explique par quelque-chose de simple : il n\u0026rsquo;y a même pas de package manager (apt, pkg, snap, etc\u0026hellip;) installé par défaut ! On peut juste y faire tourner des container et configurer l\u0026rsquo;OS avant même de le booter.\nIl vise également a être remplacé facilement et clusterisé. Bref, pour faire tourner du container c\u0026rsquo;est plutôt sympathique.\ngRPC ↔️ J\u0026rsquo;en ai entendu parlé récemment mais pas encore mis en oeuvre. j\u0026rsquo;aimerais bien dès que j\u0026rsquo;en aurais le temps l\u0026rsquo;essayer.\nC\u0026rsquo;est un framework RPC, ce qui veut dire qu\u0026rsquo;il implémente plusieurs standards de Remote Procedure Call (RPC) en bidirectionnel.\nOnedrive-backupper ☁️ Bon cette fois-ci ce n\u0026rsquo;est pas implémenté, mais promis je vais faire l\u0026rsquo;effort rapidement !\nL\u0026rsquo;idée est de créer un container qui viendrait se plugger sur un volume docker pour en extraire un répertoire de fichiers, en créer un backup, et l\u0026rsquo;envoyer vers mon onedrive personnel pour faire des sauvegardes. Créer une image docker qui viens se plugger sur un volume pour backupper + rotation a interval régulier des backups sur un système de fichiers.\nAu fur et à mesure des optimisations pourrait-être ajoutés, je pense notamment à une rotation des backups, et l\u0026rsquo;ajout d\u0026rsquo;un client qui pourrait décompresser un backup d\u0026rsquo;une date spécifique pour le remettre en production.\nMais pour ce soir je vais déjà essayer de créer le script python qui permet simplement de sauvegarder un fichier dans onedrive sans interaction humaine. 😁\n","permalink":"https://blog.sdormeau.com/posts/2023-01-18-coreos-grpc-et-onedrive-backupper/","summary":"\u003ch2 id=\"coreos-\"\u003eCoreOS 🌱🐋\u003c/h2\u003e\n\u003cp\u003eJ\u0026rsquo;ai découvert hier \u003ca href=\"https://getfedora.org/coreos?stream=stable\"\u003eCoreOS\u003c/a\u003e, c\u0026rsquo;est un système d\u0026rsquo;exploitation orienté container en rolling release. Qu\u0026rsquo;est-ce que ça veut dire ce charabiat ? Et bien une rolling release, c\u0026rsquo;est un OS qui est tout le temps à jour.\u003c/p\u003e\n\u003cp\u003eL\u0026rsquo;orientation container elle s\u0026rsquo;explique par quelque-chose de simple : il n\u0026rsquo;y a même pas de package manager (apt, pkg, snap, etc\u0026hellip;) installé par défaut ! On peut juste y faire tourner des container et configurer l\u0026rsquo;OS avant même de le booter.\u003c/p\u003e","title":"CoreOS, gRPC et onedrive-backupper"},{"content":"Une checklist des choses que j\u0026rsquo;ai à apprendre.\nDjango basics Authentification django Déploiement avec uvicorn création image Docker + upload vers hub.docker.com Svelte + SvelteKit ","permalink":"https://blog.sdormeau.com/roadmap/roadmap/","summary":"\u003cp\u003eUne checklist des choses que j\u0026rsquo;ai à apprendre.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e Django basics\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e Authentification django\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e Déploiement avec uvicorn\u003c/li\u003e\n\u003cli\u003e\u003cinput disabled=\"\" type=\"checkbox\"\u003e création image Docker + upload vers hub.docker.com\u003c/li\u003e\n\u003cli\u003e\u003cinput checked=\"\" disabled=\"\" type=\"checkbox\"\u003e Svelte + SvelteKit\u003c/li\u003e\n\u003c/ul\u003e","title":"Roadmap"},{"content":"Partie 6 - Fichiers statiques Finalement la partie 6 du tutoriel django était assez simple, j\u0026rsquo;avais juste besoin de redémarrer le serveur. 😋\nPartie 7 - Formulaire Dans cette partie, on plonge dans les formulaires et la customisation de la vue d\u0026rsquo;administration. on y découvre comment rajouter un champ de recherche search_fields, un filtrage sur la date list_filter, mais aussi, et le plus important : l\u0026rsquo;inlining.\nInlining L\u0026rsquo;inlining permet de créer des sous-objets d\u0026rsquo;un objet directement dans la même vue. Par exemple créer les réponses à une question dans le même formulaire. pour ce faire on rajoute le champ inlines dans le ModelAdmin.\nclass QuestionAdmin(admin.ModelAdmin): fieldsets = [ (None, {\u0026#39;fields\u0026#39;: [\u0026#39;question_text\u0026#39;]}), (\u0026#39;Date Information\u0026#39;, {\u0026#39;fields\u0026#39;: [\u0026#39;pub_date\u0026#39;]}) ] inlines = [ChoiceInline] # \u0026lt;--------- list_display = [\u0026#34;question_text\u0026#34;, \u0026#34;pub_date\u0026#34;, \u0026#34;was_published_recently\u0026#34;] list_filter = [\u0026#39;pub_date\u0026#39;] search_fields = [\u0026#39;question_text\u0026#39;] celui-ci est lié a une classe qui lie un model avec un inline.\nclass ChoiceInline(admin.TabularInline): model = Choice extra = 1 Pour terminer, cette partie quatre montre aussi comment surcharger le gabarit (template) d\u0026rsquo;une vue d\u0026rsquo;administration.\nHors tuto : vues génériques N\u0026rsquo;ayant pas tout vue des vues (haha\u0026hellip;) j\u0026rsquo;ai décidé de pousser un peu plus loin l\u0026rsquo;apprentissage des vues génériques.\nJ\u0026rsquo;y découvre alors qu\u0026rsquo;il est possible de créer des \u0026ldquo;vues sans vue\u0026rdquo;. On défini uniquement un pointage de urls.py vers un template HTML.\nPour accélérer le développement il est également possible d\u0026rsquo;utiliser des vues très basiques de CRUD. Voici un exemple :\nfrom django.views import generic class CreateView(generic.CreateView): model = Question fields = [\u0026#39;question_text\u0026#39;, \u0026#39;pub_date\u0026#39;] class EditView(generic.edit.UpdateView): model = Question fields = [\u0026#39;question_text\u0026#39;] Ces deux vues nécéssitent tout de même la création d\u0026rsquo;un template dans polls/templates/polls/question_form.html.\nIl est également important de noter que les autres vues génériques vont chercher un template avec un nom par défaut, sinon il faut le préciser via la propriété template_name (ex. template_name = 'polls/index.html').\nConclusion Il me reste maintenant à voir l\u0026rsquo;authentification et je devrais être capable de réécrire le blog en Django. 💪\n","permalink":"https://blog.sdormeau.com/posts/2023-01-15-try-hard-django-partie-3-/","summary":"\u003ch2 id=\"partie-6---fichiers-statiques\"\u003ePartie 6 - Fichiers statiques\u003c/h2\u003e\n\u003cp\u003eFinalement la partie 6 du tutoriel django était assez simple, j\u0026rsquo;avais juste besoin de redémarrer le serveur. 😋\u003c/p\u003e\n\u003ch2 id=\"partie-7---formulaire\"\u003ePartie 7 - Formulaire\u003c/h2\u003e\n\u003cp\u003eDans cette partie, on plonge dans les formulaires et la customisation de la vue d\u0026rsquo;administration. on y découvre comment rajouter un champ de recherche \u003ccode\u003esearch_fields\u003c/code\u003e, un filtrage sur la date \u003ccode\u003elist_filter\u003c/code\u003e, mais aussi, et le plus important : l\u0026rsquo;inlining.\u003c/p\u003e\n\u003ch3 id=\"inlining\"\u003eInlining\u003c/h3\u003e\n\u003cp\u003eL\u0026rsquo;inlining permet de créer des sous-objets d\u0026rsquo;un objet directement dans la même vue. Par exemple créer les réponses à une question dans le même formulaire. pour ce faire on rajoute le champ \u003ccode\u003einlines\u003c/code\u003e dans le ModelAdmin.\u003c/p\u003e","title":"Try Hard Django Partie 3 🐍"},{"content":"Partie 5 Au deuxième jour de mon apprentissage je me suis concentré sur uniquement la partie 5 du tutoriel Django, pour cause ! Elle parle des Tests et observe donc un volume important.\nVoilà ce que j\u0026rsquo;en retiens généralement :\nIl faut écrire des tests, peut importe la quantité (mieux vaut trop que pas assez) Les débutants ne fonctionnent pas en TDD, mais il faut écrire des tests quand même Les tests c\u0026rsquo;est super pratique quand on est en équipe (pour ne pas casser le code du collègue et vice-versa) Et d\u0026rsquo;un point de vue plus \u0026ldquo;tech\u0026rdquo; :\non utilise beaucoup la fonction from django.utils import timezone on écrit une classe par Vue / Model au moins Il faut privilégier l\u0026rsquo;usage de self.Assert\u0026lt;something\u0026gt; plutôt que assert Il est possible de tester les vues dans le shell on importe l\u0026rsquo;environement from django.setup.utils import setup_test_environment on l\u0026rsquo;applique setup_test_environment() on peut ensuite faire des choses comme r = client.get(reverse('polls:index')) Partie 6 J\u0026rsquo;ai commencé la partie 6 du tutoriel sans succès, celle-ci traite des STATIC_FILES. Rendez-vous donc au prochain article pour la solution. 😉\nSvelte Bon alors c\u0026rsquo;est quoi ? Svelte est un framework Javascript (comme React, Angular et Vue).\nAlors pourquoi je m\u0026rsquo;intéresse à lui et pas aux mastodonte du secteur ?\nD\u0026rsquo;abord parceque pas besoin d\u0026rsquo;apprendre le Typescript, on utilise les langages qu\u0026rsquo;on connaît (HTML, CSS, JS). Ensuite il n\u0026rsquo;utilise pas de VirtualDom et il est beaucoup plus performant que le reste de la concurrence !\nÀ mon avis il s\u0026rsquo;imposera dans les 5 prochaines années.\n","permalink":"https://blog.sdormeau.com/posts/2023-01-15-try-hard-django-partie-2-/","summary":"\u003ch2 id=\"partie-5\"\u003ePartie 5\u003c/h2\u003e\n\u003cp\u003eAu deuxième jour de mon apprentissage je me suis concentré sur uniquement la partie 5 du tutoriel Django, pour cause ! Elle parle des Tests et observe donc un volume important.\u003c/p\u003e\n\u003cp\u003eVoilà ce que j\u0026rsquo;en retiens généralement :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIl faut écrire des tests, peut importe la quantité (mieux vaut trop que pas assez)\u003c/li\u003e\n\u003cli\u003eLes débutants ne fonctionnent pas en TDD, mais il faut écrire des tests quand même\u003c/li\u003e\n\u003cli\u003eLes tests c\u0026rsquo;est super pratique quand on est en équipe (pour ne pas casser le code du collègue et vice-versa)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eEt d\u0026rsquo;un point de vue plus \u0026ldquo;tech\u0026rdquo; :\u003c/p\u003e","title":"Try Hard Django Partie 2 🐍"},{"content":"Je reprend donc l\u0026rsquo;apprentissage de Django en accéléré. J\u0026rsquo;ai pu revoir les 4 première partie du tutoriel du site officiel.\nVoici ce que j\u0026rsquo;ai pu revoir lors de ces 4 parties :\nPartie 1 La commande python manage.py runserver , les vues de base et le routing via le fichier urls.py .avec la fonction path() qui relie un url à quelque-chose.\nPartie 2 La deuxième partie s\u0026rsquo;ace autour de la définition des modèles dans models.py, leur activation via le settings.py, la création d\u0026rsquo;une migration, son dump en SQL brut et son application. On y joue également un peu avec l\u0026rsquo;API django à travers la commande python manage.py shell. Pour finir, cette partie introduit l\u0026rsquo;interface d\u0026rsquo;administration à travers la création du superuser et l\u0026rsquo;enregistrement des modèles.\nPartie 3 C\u0026rsquo;est ici l\u0026rsquo;introduction en douceur de la gestion poussé des vues : utilisation d\u0026rsquo;\u0026lsquo;argument en clé primaire, rédaction de template, renvoie de context dans la méthode render(), gestion des 404, codage dynamique des urls via {% url 'app:nom' argument %} et pour finir les espaces de nom.\nPartie 4 La partie 4 se concentre sur l\u0026rsquo;écriture d\u0026rsquo;un formulaire brut et son traitement, la gestion des erreurs via le try: except:, la redirection http, le raccourci get_object_or_404() et pour finir introduit les vues génériques.\nJe ne me rappelle pas avoir utilisé ces vues génériques alors ce tutoriel vaut bien le coup !\n","permalink":"https://blog.sdormeau.com/posts/2023-01-13-try-hard-django-partie-1-/","summary":"\u003cp\u003eJe reprend donc l\u0026rsquo;apprentissage de Django en accéléré. J\u0026rsquo;ai pu revoir les 4 première partie du tutoriel du \u003ca href=\"https://docs.djangoproject.com/fr/4.1/intro/tutorial04/\"\u003esite officiel\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eVoici ce que j\u0026rsquo;ai pu revoir lors de ces 4 parties :\u003c/p\u003e\n\u003ch2 id=\"partie-1\"\u003ePartie 1\u003c/h2\u003e\n\u003cp\u003eLa commande \u003ccode\u003epython manage.py runserver\u003c/code\u003e , les vues de base et le routing via le fichier \u003ccode\u003eurls.py\u003c/code\u003e .avec la fonction \u003ccode\u003epath()\u003c/code\u003e qui relie un url à quelque-chose.\u003c/p\u003e\n\u003ch2 id=\"partie-2\"\u003ePartie 2\u003c/h2\u003e\n\u003cp\u003eLa deuxième partie s\u0026rsquo;ace autour de la définition des modèles dans \u003ccode\u003emodels.py\u003c/code\u003e, leur activation via le \u003ccode\u003esettings.py\u003c/code\u003e, la création d\u0026rsquo;une migration, son dump en SQL brut et son application. On y joue également un peu avec \u003ca href=\"https://docs.djangoproject.com/fr/4.1/intro/tutorial02/#playing-with-the-api\"\u003el\u0026rsquo;API django\u003c/a\u003e à travers la commande \u003ccode\u003epython manage.py shell\u003c/code\u003e. Pour finir, cette partie introduit l\u0026rsquo;interface d\u0026rsquo;administration à travers la création du \u003cstrong\u003esuperuser\u003c/strong\u003e et l\u0026rsquo;enregistrement des modèles.\u003c/p\u003e","title":"Try hard Django - partie 1 🐍"},{"content":"Aujourd\u0026rsquo;hui j\u0026rsquo;ai découvert ChatGPT, un chatbot propulsé par une IA ultra puissante à qui on peut demander de générer du code dans n\u0026rsquo;importe quel langage !\nJe m\u0026rsquo;en suis alors servi pour écrire un code dont je rêve depuis toujours : un script de backup vers onedrive.﻿ Et oui, tant qu\u0026rsquo;à payer un abonnement a 100 € par an pour un cloud, autant aussi y accéder aussi de manière programmatique !\nC﻿hatGPT m\u0026rsquo;a donc généré le code suivant qu\u0026rsquo;il ne reste plus qu\u0026rsquo;à adapter :\nimport shutil import os from onedrivesdk import Session def backup_file_to_onedrive(file_path, client_id, client_secret): # Create an authenticated session session = Session(client_id, client_secret) # Get the authenticated client client = session.get_client() # Get the root folder of the OneDrive root_folder = client.item(drive=\u0026#39;me\u0026#39;, id=\u0026#39;root\u0026#39;).children.get() # Get the current date and time current_time = time.strftime(\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;, time.gmtime()) # Get the backup file name backup_file_name = os.path.basename(file_path) + \u0026#39; \u0026#39; + current_time # Create a new file in the OneDrive root folder client.item(drive=\u0026#39;me\u0026#39;, id=\u0026#39;root\u0026#39;).children[backup_file_name].upload(file_path) print(f\u0026#39;File {file_path} has been backed up to OneDrive as {backup_file_name}.\u0026#39;) S﻿ur un autre sujet, je compte me remettre à apprendre Django, et plus généralement me dérouiller dans le domaine du web. Cela va me permettre notamment de créer une interface d\u0026rsquo;édition du blog en ligne, car actuellement il faut le cloner avec une clé SSH sur une machine pour pouvoir rédiger des article\u0026hellip;\nD﻿ans la bataille aura probablement lieu une fusion ou un transfert des données de ce blog vers une app Django. Je ferais en sorte alors de créer des backups automatisés via le script Python plus haut :)\nS﻿ide Note : J\u0026rsquo;ai appris que les webhooks tournent via l\u0026rsquo;émulateur de shell installé par git sur windows\n","permalink":"https://blog.sdormeau.com/posts/2023-01-13-chatgpt-onedrive-et-blog/","summary":"\u003cp\u003eAujourd\u0026rsquo;hui j\u0026rsquo;ai découvert \u003ca href=\"https://chat.openai.com/chat\"\u003eChatGPT\u003c/a\u003e, un chatbot propulsé par une IA ultra puissante à qui on peut demander de générer du code dans n\u0026rsquo;importe quel langage !\u003c/p\u003e\n\u003cp\u003eJe m\u0026rsquo;en suis alors servi pour écrire un code dont je rêve depuis toujours : un script de backup vers onedrive.﻿ Et oui,  tant qu\u0026rsquo;à payer un abonnement a 100 € par an pour un cloud, autant aussi y accéder aussi de manière programmatique !\u003c/p\u003e\n\u003cp\u003eC﻿hatGPT m\u0026rsquo;a donc généré le code suivant qu\u0026rsquo;il ne reste plus qu\u0026rsquo;à adapter :\u003c/p\u003e","title":"ChatGPT, Onedrive et Blog"},{"content":"Cet article n\u0026rsquo;est ni le premier ni le dernier, j\u0026rsquo;ai fait évoluer mon blog depuis le tout début de mes études, j\u0026rsquo;ai perdu les contenus précédents dans la bataille. Je me pose donc comme objectif la mise en place de backup redondant sur plusieurs sites afin de ne plus commettre cette erreur.\nL\u0026rsquo;objectif premier de ce blog est d\u0026rsquo;ancrer les connaissances acquise à travers une restitution textuelle, et si par le passé je ne l\u0026rsquo;ai pas maintenu c\u0026rsquo;est probablement parce que l\u0026rsquo;objectif d\u0026rsquo;écrire tous les jours était trop grand. Je me fixe donc comme nouvel objectif un minimum de deux articles par semaine.\nS﻿tack Technique Pour reprendre rapidement et simplement l\u0026rsquo;usage de ce blog, j\u0026rsquo;emploi le générateur de sites statique Hugo, ainsi que le Content Manager Netlify CMS. P﻿our la partie hébergement du site statique j\u0026rsquo;utilise Github Pages, car lui aussi simple à mettre en place.\n","permalink":"https://blog.sdormeau.com/posts/2023-01-05-my-first-post/","summary":"\u003cp\u003eCet article n\u0026rsquo;est ni le premier ni le dernier, j\u0026rsquo;ai fait évoluer mon blog depuis le tout début de mes études, j\u0026rsquo;ai perdu les contenus précédents dans la bataille. Je me pose donc comme objectif \u003cstrong\u003ela mise en place de backup redondant sur plusieurs sites\u003c/strong\u003e afin de ne plus commettre cette erreur.\u003c/p\u003e\n\u003cp\u003eL\u0026rsquo;objectif premier de ce blog est d\u0026rsquo;\u003cstrong\u003eancrer les connaissances acquise à travers une restitution textuelle\u003c/strong\u003e, et si par le passé je ne l\u0026rsquo;ai pas maintenu c\u0026rsquo;est probablement parce que l\u0026rsquo;objectif d\u0026rsquo;écrire tous les jours était trop grand. Je me fixe donc comme \u003cstrong\u003enouvel objectif un minimum de deux articles par semaine.\u003c/strong\u003e\u003c/p\u003e","title":"Hello World n°36997, le blog reprend"},{"content":"L\u0026rsquo;objectif de ce blog est de retranscrire texutellement mes connaissances et experiences afin de mieux les mémoriser.\n","permalink":"https://blog.sdormeau.com/about/about/","summary":"\u003cp\u003eL\u0026rsquo;objectif de ce blog est de retranscrire texutellement mes connaissances et experiences afin de mieux les mémoriser.\u003c/p\u003e","title":"À propos de ce blog"}]