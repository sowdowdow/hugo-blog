[{"content":"Nous avons r√©cemment fait face √† un probl√®me de taille au sein de mon √©quipe : la fa√ßon par d√©faut de travailler avec docker sur une machine windows est d\u0026rsquo;installer Docker Desktop. Or cet outil n√©c√©ssite une licence payant pour les entreprises de plus de 250 employ√©s.\nComment utiliser docker sur Windows sans passer par Docker Desktop ?\nLe premier reflexe que j\u0026rsquo;ai eu a √©t√© d\u0026rsquo;installer Podman Desktop, une interface graphique accompagn√© d\u0026rsquo;un backend podman, une alternative √† Docker que j\u0026rsquo;ai pr√©sent√© dans l\u0026rsquo;article pr√©c√©dent.\n√† premi√®re vue tr√®s int√©rressant, celui-ci ne nous a pas sp√©cialement d√©sservie de par ses performances. En effet une build native maven sur la m√™me machine windows √† pris ~2min30, tendis que podman aura pass√© pr√®s de 16 minutes pour la m√™me t√¢che.\nIl a donc fallu chercher ailleurs.\nRancher Desktop Sur les conseils d\u0026rsquo;un DevOps exp√©riment√©, je me suis tourn√© vers Rancher Desktop, une solution alternative et qui propose plus de flexibilit√©.\nEffectivement Rancher Desktop embarque un cluster Kubernetes qui tourne dans une instance WSL2 et il est capable de tourner sur deux backends distincts (container engines) : containerd ou dockerd.\nDans un premier temps j\u0026rsquo;ai test√© containerd, mais sans succ√®s. Celui-ci n√©c√©ssite de fonctionner avec une CLI diff√©rente de dockerCLI, autrement dit on ne peut pas utiliser la commande docker \u0026lt;command\u0026gt;, il faut alors passer par la CLI nerdctl, mais celle-ci aura refus√© de fonctionner dans notre cas.\nMoby En changeant de container engine, donc de containerd vers dockerd on obtient une commande docker fonctionnelle. L\u0026rsquo;objectif de remplacer Docker Desktop par quelque-chose d\u0026rsquo;autre est atteint ! üéä\nce fameux container engine dockerd est en fait Moby. Quand le projet Docker √† trop grossit, le monolithe a √©t√© splitt√© en plus petits composants. Un ensemble de ces composants s\u0026rsquo;est retrouv√© dans le projet Moby.\n","permalink":"https://www.simondormeau.com/posts/2023-02-03-rancher-desktop-alternative-to-docker/","summary":"Nous avons r√©cemment fait face √† un probl√®me de taille au sein de mon √©quipe : la fa√ßon par d√©faut de travailler avec docker sur une machine windows est d\u0026rsquo;installer Docker Desktop. Or cet outil n√©c√©ssite une licence payant pour les entreprises de plus de 250 employ√©s.\nComment utiliser docker sur Windows sans passer par Docker Desktop ?\nLe premier reflexe que j\u0026rsquo;ai eu a √©t√© d\u0026rsquo;installer Podman Desktop, une interface graphique accompagn√© d\u0026rsquo;un backend podman, une alternative √† Docker que j\u0026rsquo;ai pr√©sent√© dans l\u0026rsquo;article pr√©c√©dent.","title":"Rancher Desktop, an Alternative to Docker"},{"content":"Introduction Dans le cadre de mes fonctions je suis face a une nouvelle probl√©matique : Docker Desktop est la solution \u0026ldquo;Ready to go\u0026rdquo; pour utiliser Docker sur une machine de d√©veloppement.\nProbl√®me : ce logiciel n√©c√©ssite une licence pour les entreprises de plus de 250 salari√©s.\nIl faut donc lui trouver un remplacement, et l√† il existe deux options :\ninstaller Docker dans une sous machine linux WSL2 et faire plein de manipulation compliqu√©s tester une solution alternative √† Docker Podman Je suis donc parti dans la seconde direction. D√©couvrant ainsi Podman, un projet open-source qui subvient aux m√™mes besoins que Docker.\nEn effet docker cr√©er des containers au format Open Container Initiative (OCI). Ce format est donc un standard et Podman se place en \u0026ldquo;Drop in replacement\u0026rdquo;, donc rien √† faire de sp√©cial, on l\u0026rsquo;install et il fonctionne.\nPoint positifs ‚úÖ plus s√©curis√© de Docker (un mode rootless, un mode rootful) temps de d√©marrage tr√®s rapide (pas de Daemon comme docker) pas besoin de licence pour l\u0026rsquo;utiliser une croissance rapide Point n√©gatifs ‚ùå pas encore le m√™me support que docker Podman Desktop qui est loin derri√®re l\u0026rsquo;UI de docker desktop j\u0026rsquo;ai des performances m√©diocres sur ma machine, mais je ne l\u0026rsquo;ai pas compar√© √† docker Celui-ci est entour√© de tout un ecosyst√®me opensource notamment Buildah sur lequel il se base pour construire les images des Dockerfile.\nEn r√©sum√© Il me reste pas mal de tests √† faire pour tenter de le configurer correctement et peut-√™tre de le benchmarker contre Docker. Je reviendrais peut-√™tre avec un second article pour en parler. üòâ\n","permalink":"https://www.simondormeau.com/posts/2023-01-25-podman/","summary":"Introduction Dans le cadre de mes fonctions je suis face a une nouvelle probl√©matique : Docker Desktop est la solution \u0026ldquo;Ready to go\u0026rdquo; pour utiliser Docker sur une machine de d√©veloppement.\nProbl√®me : ce logiciel n√©c√©ssite une licence pour les entreprises de plus de 250 salari√©s.\nIl faut donc lui trouver un remplacement, et l√† il existe deux options :\ninstaller Docker dans une sous machine linux WSL2 et faire plein de manipulation compliqu√©s tester une solution alternative √† Docker Podman Je suis donc parti dans la seconde direction.","title":"Podman"},{"content":"CoreOS üå±üêã J\u0026rsquo;ai d√©couvert hier CoreOS, c\u0026rsquo;est un syst√®me d\u0026rsquo;exploitation orient√© container en rolling release. Qu\u0026rsquo;est-ce que √ßa veut dire ce charabiat ? Et bien une rolling release, c\u0026rsquo;est un OS qui est tout le temps √† jour.\nL\u0026rsquo;orientation container elle s\u0026rsquo;explique par quelque-chose de simple : il n\u0026rsquo;y a m√™me pas de package manager (apt, pkg, snap, etc\u0026hellip;) install√© par d√©faut ! On peut juste y faire tourner des container et configurer l\u0026rsquo;OS avant m√™me de le booter.\nIl vise √©galement a √™tre remplac√© facilement et clusteris√©. Bref, pour faire tourner du container c\u0026rsquo;est plut√¥t sympathique.\ngRPC ‚ÜîÔ∏è J\u0026rsquo;en ai entendu parl√© r√©cemment mais pas encore mis en oeuvre. j\u0026rsquo;aimerais bien d√®s que j\u0026rsquo;en aurais le temps l\u0026rsquo;essayer.\nC\u0026rsquo;est un framework RPC, ce qui veut dire qu\u0026rsquo;il impl√©mente plusieurs standards de Remote Procedure Call (RPC) en bidirectionnel.\nOnedrive-backupper ‚òÅÔ∏è Bon cette fois-ci ce n\u0026rsquo;est pas impl√©ment√©, mais promis je vais faire l\u0026rsquo;effort rapidement !\nL\u0026rsquo;id√©e est de cr√©er un container qui viendrait se plugger sur un volume docker pour en extraire un r√©pertoire de fichiers, en cr√©er un backup, et l\u0026rsquo;envoyer vers mon onedrive personnel pour faire des sauvegardes. Cr√©er une image docker qui viens se plugger sur un volume pour backupper + rotation a interval r√©gulier des backups sur un syst√®me de fichiers.\nAu fur et √† mesure des optimisations pourrait-√™tre ajout√©s, je pense notamment √† une rotation des backups, et l\u0026rsquo;ajout d\u0026rsquo;un client qui pourrait d√©compresser un backup d\u0026rsquo;une date sp√©cifique pour le remettre en production.\nMais pour ce soir je vais d√©j√† essayer de cr√©er le script python qui permet simplement de sauvegarder un fichier dans onedrive sans interaction humaine. üòÅ\n","permalink":"https://www.simondormeau.com/posts/2023-01-18-coreos-grpc-et-onedrive-backupper/","summary":"CoreOS üå±üêã J\u0026rsquo;ai d√©couvert hier CoreOS, c\u0026rsquo;est un syst√®me d\u0026rsquo;exploitation orient√© container en rolling release. Qu\u0026rsquo;est-ce que √ßa veut dire ce charabiat ? Et bien une rolling release, c\u0026rsquo;est un OS qui est tout le temps √† jour.\nL\u0026rsquo;orientation container elle s\u0026rsquo;explique par quelque-chose de simple : il n\u0026rsquo;y a m√™me pas de package manager (apt, pkg, snap, etc\u0026hellip;) install√© par d√©faut ! On peut juste y faire tourner des container et configurer l\u0026rsquo;OS avant m√™me de le booter.","title":"CoreOS, gRPC et onedrive-backupper"},{"content":"Une checklist des choses que j\u0026rsquo;ai √† apprendre.\nDjango basics Authentification django D√©ploiement avec uvicorn cr√©ation image Docker + upload vers hub.docker.com Svelte + SvelteKit ","permalink":"https://www.simondormeau.com/roadmap/roadmap/","summary":"Une checklist des choses que j\u0026rsquo;ai √† apprendre.\nDjango basics Authentification django D√©ploiement avec uvicorn cr√©ation image Docker + upload vers hub.docker.com Svelte + SvelteKit ","title":"Roadmap"},{"content":"Partie 6 - Fichiers statiques Finalement la partie 6 du tutoriel django √©tait assez simple, j\u0026rsquo;avais juste besoin de red√©marrer le serveur. üòã\nPartie 7 - Formulaire Dans cette partie, on plonge dans les formulaires et la customisation de la vue d\u0026rsquo;administration. on y d√©couvre comment rajouter un champ de recherche search_fields, un filtrage sur la date list_filter, mais aussi, et le plus important : l\u0026rsquo;inlining.\nInlining L\u0026rsquo;inlining permet de cr√©er des sous-objets d\u0026rsquo;un objet directement dans la m√™me vue. Par exemple cr√©er les r√©ponses √† une question dans le m√™me formulaire. pour ce faire on rajoute le champ inlines dans le ModelAdmin.\nclass QuestionAdmin(admin.ModelAdmin): fieldsets = [ (None, {\u0026#39;fields\u0026#39;: [\u0026#39;question_text\u0026#39;]}), (\u0026#39;Date Information\u0026#39;, {\u0026#39;fields\u0026#39;: [\u0026#39;pub_date\u0026#39;]}) ] inlines = [ChoiceInline] # \u0026lt;--------- list_display = [\u0026#34;question_text\u0026#34;, \u0026#34;pub_date\u0026#34;, \u0026#34;was_published_recently\u0026#34;] list_filter = [\u0026#39;pub_date\u0026#39;] search_fields = [\u0026#39;question_text\u0026#39;] celui-ci est li√© a une classe qui lie un model avec un inline.\nclass ChoiceInline(admin.TabularInline): model = Choice extra = 1 Pour terminer, cette partie quatre montre aussi comment surcharger le gabarit (template) d\u0026rsquo;une vue d\u0026rsquo;administration.\nHors tuto : vues g√©n√©riques N\u0026rsquo;ayant pas tout vue des vues (haha\u0026hellip;) j\u0026rsquo;ai d√©cid√© de pousser un peu plus loin l\u0026rsquo;apprentissage des vues g√©n√©riques.\nJ\u0026rsquo;y d√©couvre alors qu\u0026rsquo;il est possible de cr√©er des \u0026ldquo;vues sans vue\u0026rdquo;. On d√©fini uniquement un pointage de urls.py vers un template HTML.\nPour acc√©l√©rer le d√©veloppement il est √©galement possible d\u0026rsquo;utiliser des vues tr√®s basiques de CRUD. Voici un exemple :\nfrom django.views import generic class CreateView(generic.CreateView): model = Question fields = [\u0026#39;question_text\u0026#39;, \u0026#39;pub_date\u0026#39;] class EditView(generic.edit.UpdateView): model = Question fields = [\u0026#39;question_text\u0026#39;] Ces deux vues n√©c√©ssitent tout de m√™me la cr√©ation d\u0026rsquo;un template dans polls/templates/polls/question_form.html.\nIl est √©galement important de noter que les autres vues g√©n√©riques vont chercher un template avec un nom par d√©faut, sinon il faut le pr√©ciser via la propri√©t√© template_name (ex. template_name = 'polls/index.html').\nConclusion Il me reste maintenant √† voir l\u0026rsquo;authentification et je devrais √™tre capable de r√©√©crire le blog en Django. üí™\n","permalink":"https://www.simondormeau.com/posts/2023-01-15-try-hard-django-partie-3-/","summary":"Partie 6 - Fichiers statiques Finalement la partie 6 du tutoriel django √©tait assez simple, j\u0026rsquo;avais juste besoin de red√©marrer le serveur. üòã\nPartie 7 - Formulaire Dans cette partie, on plonge dans les formulaires et la customisation de la vue d\u0026rsquo;administration. on y d√©couvre comment rajouter un champ de recherche search_fields, un filtrage sur la date list_filter, mais aussi, et le plus important : l\u0026rsquo;inlining.\nInlining L\u0026rsquo;inlining permet de cr√©er des sous-objets d\u0026rsquo;un objet directement dans la m√™me vue.","title":"Try Hard Django Partie 3 üêç"},{"content":"Partie 5 Au deuxi√®me jour de mon apprentissage je me suis concentr√© sur uniquement la partie 5 du tutoriel Django, pour cause ! Elle parle des Tests et observe donc un volume important.\nVoil√† ce que j\u0026rsquo;en retiens g√©n√©ralement :\nIl faut √©crire des tests, peut importe la quantit√© (mieux vaut trop que pas assez) Les d√©butants ne fonctionnent pas en TDD, mais il faut √©crire des tests quand m√™me Les tests c\u0026rsquo;est super pratique quand on est en √©quipe (pour ne pas casser le code du coll√®gue et vice-versa) Et d\u0026rsquo;un point de vue plus \u0026ldquo;tech\u0026rdquo; :\non utilise beaucoup la fonction from django.utils import timezone on √©crit une classe par Vue / Model au moins Il faut privil√©gier l\u0026rsquo;usage de self.Assert\u0026lt;something\u0026gt; plut√¥t que assert Il est possible de tester les vues dans le shell on importe l\u0026rsquo;environement from django.setup.utils import setup_test_environment on l\u0026rsquo;applique setup_test_environment() on peut ensuite faire des choses comme r = client.get(reverse('polls:index')) Partie 6 J\u0026rsquo;ai commenc√© la partie 6 du tutoriel sans succ√®s, celle-ci traite des STATIC_FILES. Rendez-vous donc au prochain article pour la solution. üòâ\nSvelte Bon alors c\u0026rsquo;est quoi ? Svelte est un framework Javascript (comme React, Angular et Vue).\nAlors pourquoi je m\u0026rsquo;int√©resse √† lui et pas aux mastodonte du secteur ?\nD\u0026rsquo;abord parceque pas besoin d\u0026rsquo;apprendre le Typescript, on utilise les langages qu\u0026rsquo;on conna√Æt (HTML, CSS, JS). Ensuite il n\u0026rsquo;utilise pas de VirtualDom et il est beaucoup plus performant que le reste de la concurrence !\n√Ä mon avis il s\u0026rsquo;imposera dans les 5 prochaines ann√©es.\n","permalink":"https://www.simondormeau.com/posts/2023-01-15-try-hard-django-partie-2-/","summary":"Partie 5 Au deuxi√®me jour de mon apprentissage je me suis concentr√© sur uniquement la partie 5 du tutoriel Django, pour cause ! Elle parle des Tests et observe donc un volume important.\nVoil√† ce que j\u0026rsquo;en retiens g√©n√©ralement :\nIl faut √©crire des tests, peut importe la quantit√© (mieux vaut trop que pas assez) Les d√©butants ne fonctionnent pas en TDD, mais il faut √©crire des tests quand m√™me Les tests c\u0026rsquo;est super pratique quand on est en √©quipe (pour ne pas casser le code du coll√®gue et vice-versa) Et d\u0026rsquo;un point de vue plus \u0026ldquo;tech\u0026rdquo; :","title":"Try Hard Django Partie 2 üêç"},{"content":"Je reprend donc l\u0026rsquo;apprentissage de Django en acc√©l√©r√©. J\u0026rsquo;ai pu revoir les 4 premi√®re partie du tutoriel du site officiel.\nVoici ce que j\u0026rsquo;ai pu revoir lors de ces 4 parties :\nPartie 1 La commande python manage.py runserver , les vues de base et le routing via le fichier urls.py .avec la fonction path() qui relie un url √† quelque-chose.\nPartie 2 La deuxi√®me partie s\u0026rsquo;ace autour de la d√©finition des mod√®les dans models.py, leur activation via le settings.py, la cr√©ation d\u0026rsquo;une migration, son dump en SQL brut et son application. On y joue √©galement un peu avec l\u0026rsquo;API django √† travers la commande python manage.py shell. Pour finir, cette partie introduit l\u0026rsquo;interface d\u0026rsquo;administration √† travers la cr√©ation du superuser et l\u0026rsquo;enregistrement des mod√®les.\nPartie 3 C\u0026rsquo;est ici l\u0026rsquo;introduction en douceur de la gestion pouss√© des vues : utilisation d\u0026rsquo;\u0026lsquo;argument en cl√© primaire, r√©daction de template, renvoie de context dans la m√©thode render(), gestion des 404, codage dynamique des urls via {% url 'app:nom' argument %} et pour finir les espaces de nom.\nPartie 4 La partie 4 se concentre sur l\u0026rsquo;√©criture d\u0026rsquo;un formulaire brut et son traitement, la gestion des erreurs via le try: except:, la redirection http, le raccourci get_object_or_404() et pour finir introduit les vues g√©n√©riques.\nJe ne me rappelle pas avoir utilis√© ces vues g√©n√©riques alors ce tutoriel vaut bien le coup !\n","permalink":"https://www.simondormeau.com/posts/2023-01-13-try-hard-django-partie-1-/","summary":"Je reprend donc l\u0026rsquo;apprentissage de Django en acc√©l√©r√©. J\u0026rsquo;ai pu revoir les 4 premi√®re partie du tutoriel du site officiel.\nVoici ce que j\u0026rsquo;ai pu revoir lors de ces 4 parties :\nPartie 1 La commande python manage.py runserver , les vues de base et le routing via le fichier urls.py .avec la fonction path() qui relie un url √† quelque-chose.\nPartie 2 La deuxi√®me partie s\u0026rsquo;ace autour de la d√©finition des mod√®les dans models.","title":"Try hard Django - partie 1 üêç"},{"content":"Aujourd\u0026rsquo;hui j\u0026rsquo;ai d√©couvert ChatGPT, un chatbot propuls√© par une IA ultra puissante √† qui on peut demander de g√©n√©rer du code dans n\u0026rsquo;importe quel langage !\nJe m\u0026rsquo;en suis alors servi pour √©crire un code dont je r√™ve depuis toujours : un script de backup vers onedrive.Ôªø Et oui, tant qu\u0026rsquo;√† payer un abonnement a 100 ‚Ç¨ par an pour un cloud, autant aussi y acc√©der aussi de mani√®re programmatique !\nCÔªøhatGPT m\u0026rsquo;a donc g√©n√©r√© le code suivant qu\u0026rsquo;il ne reste plus qu\u0026rsquo;√† adapter :\nimport shutil import os from onedrivesdk import Session def backup_file_to_onedrive(file_path, client_id, client_secret): # Create an authenticated session session = Session(client_id, client_secret) # Get the authenticated client client = session.get_client() # Get the root folder of the OneDrive root_folder = client.item(drive=\u0026#39;me\u0026#39;, id=\u0026#39;root\u0026#39;).children.get() # Get the current date and time current_time = time.strftime(\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;, time.gmtime()) # Get the backup file name backup_file_name = os.path.basename(file_path) + \u0026#39; \u0026#39; + current_time # Create a new file in the OneDrive root folder client.item(drive=\u0026#39;me\u0026#39;, id=\u0026#39;root\u0026#39;).children[backup_file_name].upload(file_path) print(f\u0026#39;File {file_path} has been backed up to OneDrive as {backup_file_name}.\u0026#39;) SÔªøur un autre sujet, je compte me remettre √† apprendre Django, et plus g√©n√©ralement me d√©rouiller dans le domaine du web. Cela va me permettre notamment de cr√©er une interface d\u0026rsquo;√©dition du blog en ligne, car actuellement il faut le cloner avec une cl√© SSH sur une machine pour pouvoir r√©diger des article\u0026hellip;\nDÔªøans la bataille aura probablement lieu une fusion ou un transfert des donn√©es de ce blog vers une app Django. Je ferais en sorte alors de cr√©er des backups automatis√©s via le script Python plus haut :)\nSÔªøide Note : J\u0026rsquo;ai appris que les webhooks tournent via l\u0026rsquo;√©mulateur de shell install√© par git sur windows\n","permalink":"https://www.simondormeau.com/posts/2023-01-13-chatgpt-onedrive-et-blog/","summary":"Aujourd\u0026rsquo;hui j\u0026rsquo;ai d√©couvert ChatGPT, un chatbot propuls√© par une IA ultra puissante √† qui on peut demander de g√©n√©rer du code dans n\u0026rsquo;importe quel langage !\nJe m\u0026rsquo;en suis alors servi pour √©crire un code dont je r√™ve depuis toujours : un script de backup vers onedrive.Ôªø Et oui, tant qu\u0026rsquo;√† payer un abonnement a 100 ‚Ç¨ par an pour un cloud, autant aussi y acc√©der aussi de mani√®re programmatique !","title":"ChatGPT, Onedrive et Blog"},{"content":"Cet article n\u0026rsquo;est ni le premier ni le dernier, j\u0026rsquo;ai fait √©voluer mon blog depuis le tout d√©but de mes √©tudes, j\u0026rsquo;ai perdu les contenus pr√©c√©dents dans la bataille. Je me pose donc comme objectif la mise en place de backup redondant sur plusieurs sites afin de ne plus commettre cette erreur.\nL\u0026rsquo;objectif premier de ce blog est d\u0026rsquo;ancrer les connaissances acquise √† travers une restitution textuelle, et si par le pass√© je ne l\u0026rsquo;ai pas maintenu c\u0026rsquo;est probablement parce que l\u0026rsquo;objectif d\u0026rsquo;√©crire tous les jours √©tait trop grand. Je me fixe donc comme nouvel objectif un minimum de deux articles par semaine.\nSÔªøtack Technique Pour reprendre rapidement et simplement l\u0026rsquo;usage de ce blog, j\u0026rsquo;emploi le g√©n√©rateur de sites statique Hugo, ainsi que le Content Manager Netlify CMS. PÔªøour la partie h√©bergement du site statique j\u0026rsquo;utilise Github Pages, car lui aussi simple √† mettre en place.\n","permalink":"https://www.simondormeau.com/posts/2023-01-05-my-first-post/","summary":"Cet article n\u0026rsquo;est ni le premier ni le dernier, j\u0026rsquo;ai fait √©voluer mon blog depuis le tout d√©but de mes √©tudes, j\u0026rsquo;ai perdu les contenus pr√©c√©dents dans la bataille. Je me pose donc comme objectif la mise en place de backup redondant sur plusieurs sites afin de ne plus commettre cette erreur.\nL\u0026rsquo;objectif premier de ce blog est d\u0026rsquo;ancrer les connaissances acquise √† travers une restitution textuelle, et si par le pass√© je ne l\u0026rsquo;ai pas maintenu c\u0026rsquo;est probablement parce que l\u0026rsquo;objectif d\u0026rsquo;√©crire tous les jours √©tait trop grand.","title":"Hello World n¬∞36997, le blog reprend"},{"content":"L\u0026rsquo;objectif de ce blog est de retranscrire texutellement mes connaissances et experiences afin de mieux les m√©moriser.\n","permalink":"https://www.simondormeau.com/about/about/","summary":"L\u0026rsquo;objectif de ce blog est de retranscrire texutellement mes connaissances et experiences afin de mieux les m√©moriser.","title":"√Ä propos de ce blog"}]