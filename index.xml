<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>SDRM</title><link>https://blog.sdormeau.com/</link><description>Recent content on SDRM</description><generator>Hugo -- 0.138.0</generator><language>fr-fr</language><lastBuildDate>Sat, 09 Nov 2024 11:38:19 +0000</lastBuildDate><atom:link href="https://blog.sdormeau.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Setup Pixma TS 5050 driver for NixOS</title><link>https://blog.sdormeau.com/posts/2024-11-09-setup-pixma-ts-5050-driver-for-nixos/</link><pubDate>Sat, 09 Nov 2024 11:38:19 +0000</pubDate><guid>https://blog.sdormeau.com/posts/2024-11-09-setup-pixma-ts-5050-driver-for-nixos/</guid><description>a quick guide to print from NixOS on a Pixma TS5050</description></item><item><title>Apprentissage de Golang 🐀 - partie 2</title><link>https://blog.sdormeau.com/posts/2024-08-13-apprentissage-golang-partie-2/</link><pubDate>Tue, 13 Aug 2024 14:19:54 +0000</pubDate><guid>https://blog.sdormeau.com/posts/2024-08-13-apprentissage-golang-partie-2/</guid><description>&lt;h3 id="documentation">Documentation&lt;/h3>
&lt;p>La liste des librairies standard : &lt;a href="https://pkg.go.dev/std">https://pkg.go.dev/std&lt;/a>&lt;/p>
&lt;h2 id="variables">Variables&lt;/h2>
&lt;p>Elles sont &lt;strong>fortement typées&lt;/strong> et il en existe plusieurs types : &lt;code>bool&lt;/code>, &lt;code>string&lt;/code>, &lt;code>int&lt;/code>, &lt;code>byte&lt;/code>, &lt;code>float32&lt;/code>, &lt;code>float64&lt;/code>
Il existe d&amp;rsquo;autres types comme &lt;code>rune&lt;/code> pour l&amp;rsquo;unicode.&lt;/p>
&lt;p>exemple d&amp;rsquo;usage : &lt;code>var age int = 20&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>short syntax : &lt;code>nom := 123&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>Première lettre en :&lt;/p>
&lt;ul>
&lt;li>MAJUSCULE -&amp;gt; publique&lt;/li>
&lt;li>minuscule -&amp;gt; privé&lt;/li>
&lt;/ul>
&lt;h2 id="module">Module&lt;/h2>
&lt;ol>
&lt;li>go mod init &amp;lt;nom.go&amp;gt;&lt;/li>
&lt;li>go mod tidy&lt;/li>
&lt;li>ajouter ligne import &lt;code>&amp;lt;nom.go&amp;gt;/&amp;lt;dossier&amp;gt;&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2 id="contrôle-de-flux">Contrôle de flux&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">count&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>; &lt;span style="color:#a6e22e">count&lt;/span> &amp;gt; &lt;span style="color:#ae81ff">1&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>la variable &lt;code>count&lt;/code> ne sera accessible qu&amp;rsquo;entre les guillemets avec cette syntaxe.&lt;/p></description></item><item><title>Apprentissage de Golang 🐀 - partie 3</title><link>https://blog.sdormeau.com/posts/2024-08-21-apprentissage-golang-partie-3/</link><pubDate>Tue, 13 Aug 2024 14:19:54 +0000</pubDate><guid>https://blog.sdormeau.com/posts/2024-08-21-apprentissage-golang-partie-3/</guid><description>&lt;h2 id="conversion-de-type-casting">Conversion de type (casting)&lt;/h2>
&lt;p>exemple :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">a&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> int(&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="fonctions">fonctions&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">nom&lt;/span>(&lt;span style="color:#a6e22e">param1&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>, &lt;span style="color:#a6e22e">param2&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>) &lt;span style="color:#66d9ef">string&lt;/span> {}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La logique publique/privé s&amp;rsquo;applique toujours avec la première lettre en majuscule ou minuscule.&lt;/p>
&lt;h3 id="retour-multiples">retour multiples&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">nom&lt;/span>() (&lt;span style="color:#66d9ef">int&lt;/span>, &lt;span style="color:#66d9ef">string&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;example&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// first var ignored
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">_&lt;/span>, &lt;span style="color:#a6e22e">text&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">nom&lt;/span>()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="array">Array&lt;/h2>
&lt;p>Les tableaux ont une taille fixe&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">nom&lt;/span>[&lt;span style="color:#ae81ff">5&lt;/span>]&lt;span style="color:#66d9ef">int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// ou bien
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">tableau&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> [&lt;span style="color:#ae81ff">3&lt;/span>]&lt;span style="color:#66d9ef">string&lt;/span>{&lt;span style="color:#e6db74">&amp;#34;bob&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;moran&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="slices">Slices&lt;/h2>
&lt;p>Un Slice est un &amp;ldquo;array de taille dynamique&amp;rdquo;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">nums&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> make([]&lt;span style="color:#66d9ef">int&lt;/span>, &amp;lt;&lt;span style="color:#a6e22e">taille&lt;/span>&amp;gt;, &amp;lt;&lt;span style="color:#a6e22e">capacité&lt;/span>&amp;gt;)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>on double toujours la capacité initiale. Deux fonctions utiles pour vérifier capacité et taille sont : &lt;code>len()&lt;/code> et &lt;code>cap()&lt;/code>&lt;/p></description></item><item><title>Apprentissage de Golang 🐀 - partie 1</title><link>https://blog.sdormeau.com/posts/2024-08-08-apprentissage-golang-partie-1/</link><pubDate>Thu, 08 Aug 2024 14:15:44 +0000</pubDate><guid>https://blog.sdormeau.com/posts/2024-08-08-apprentissage-golang-partie-1/</guid><description>&lt;h2 id="gopath">$GOPATH&lt;/h2>
&lt;p>Le &lt;code>$GOPATH&lt;/code> est une variable système qui détermine l&amp;rsquo;endroit on sont placé les packages go.
Ce même chemin contiendra par convention un dossier 🖿 &lt;code>&amp;lt;mon_nom&amp;gt;.go&lt;/code> qui contiendra lui-même les projets.&lt;/p>
&lt;h2 id="packages">Packages&lt;/h2>
&lt;p>On peut créer des dossier dans lesquels on découpe le code en plusieurs fichiers.
Chaque fichier contient l&amp;rsquo;en-tête &lt;code>package &amp;lt;nom_du_dossier&amp;gt;&lt;/code> le &lt;strong>nom_du_dossier&lt;/strong> est une convention.&lt;/p>
&lt;p>exemple :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>🖿 $GOPATH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|--- 🖿 src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> |---- 🖿 sowdowdow.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | |---- main.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | |---- 🖿 inputs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | |---- mouse.go &amp;lt;----- première ligne &amp;#34;package inputs&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | |---- keyboard.go &amp;lt;----- première ligne &amp;#34;package inputs&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> |---- 🖿 organization.go
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> |---- ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="import">import&lt;/h2>
&lt;p>&lt;code>import &amp;quot;&amp;lt;nom&amp;gt;&amp;quot;&lt;/code> permet de récupérer des fonctions, structs&amp;hellip; depuis un autre package (= fichier différent).
ensuite on peut faire &lt;code>&amp;lt;nom&amp;gt;.Fonction()&lt;/code>&lt;/p></description></item><item><title>Rust &amp; Activity Watch 🦀</title><link>https://blog.sdormeau.com/posts/2024-07-07-rust--activity-watch/</link><pubDate>Sun, 07 Jul 2024 09:47:22 +0000</pubDate><guid>https://blog.sdormeau.com/posts/2024-07-07-rust--activity-watch/</guid><description>&lt;p>Après avoir appris que j&amp;rsquo;aurais la possibilité de travailler avec du Rust en milieu professionnel, j&amp;rsquo;ai commencé à me documenter sur le langage.
Et il d&amp;rsquo;avère que pour l&amp;rsquo;apprendre on peut passer par un outil qui s&amp;rsquo;appelle &lt;a href="https://github.com/rust-lang/rustlings">&lt;strong>Rustlings&lt;/strong>&lt;/a>.&lt;/p>
&lt;p>C&amp;rsquo;est un ensemble d&amp;rsquo;exercices dans lesquels le but est de débugger et ainsi comprendre les méchaniques et subtilités du langage.&lt;/p>
&lt;h2 id="actualités">Actualités&lt;/h2>
&lt;p>J&amp;rsquo;ai découvert &lt;a href="https://activitywatch.net/">Activity Watch&lt;/a>, &lt;a href="https://rclone.org/">rclone&lt;/a> et &lt;a href="https://opentofu.org/">Open Tofu&lt;/a> 🟨.&lt;/p>
&lt;p>Le premier est un outil qui permet de suivre l&amp;rsquo;activité d&amp;rsquo;une machine.&lt;/p></description></item><item><title>Back to Ubuntu</title><link>https://blog.sdormeau.com/posts/2024-06-08-front-matter/</link><pubDate>Sat, 08 Jun 2024 15:57:59 +0000</pubDate><guid>https://blog.sdormeau.com/posts/2024-06-08-front-matter/</guid><description>&lt;p>Après maintenant quelques mois consacrés au sport me voilà de nouveau dans la sphère apprentissage.&lt;/p>
&lt;p>Je viens de recréer une VM Ubuntu 24.04 et cherche à nouveau les derniers outils tendance.&lt;/p>
&lt;h2 id="atuin">Atuin&lt;/h2>
&lt;p>J&amp;rsquo;ai ainsi trouvé un utilitaire qui viens remplacer l&amp;rsquo;historique classique linux par une BDD sqlite, permettant d&amp;rsquo;obtenir des stats mais également d&amp;rsquo;avoir un historique beaucoup plus long et potentiellement le synchroniser entre différentes machines.&lt;/p>
&lt;p>Cet utilitaire écrit en Rust se nomme &lt;a href="https://atuin.sh/">Atuin&lt;/a>.&lt;/p></description></item><item><title>Sveltekit &amp; compagnie 🧡</title><link>https://blog.sdormeau.com/posts/2023-10-16-sveltekit-n-co/</link><pubDate>Mon, 16 Oct 2023 17:30:56 +0200</pubDate><guid>https://blog.sdormeau.com/posts/2023-10-16-sveltekit-n-co/</guid><description>&lt;p>Maintenant que j&amp;rsquo;ai quitté Django, j&amp;rsquo;ai besoin de vous parler de &lt;a href="https://kit.svelte.dev/">Sveltekit&lt;/a>.&lt;/p>
&lt;p>En regardant une vidéo plutôt intérressante de &lt;a href="https://www.youtube.com/watch?v=vnkyMcw0TZE">Ben Davis&lt;/a> j&amp;rsquo;ai décidé de tester un lot de nouvelles technologies qui semblent avoir une bonne synergie.&lt;/p>
&lt;p>à savoir :&lt;/p>
&lt;ul>
&lt;li>SvelteKit&lt;/li>
&lt;li>DrizzleORM&lt;/li>
&lt;li>Vercel&lt;/li>
&lt;li>PlanetScale&lt;/li>
&lt;/ul>
&lt;h2 id="sveltekit-">SvelteKit 🧡✨&lt;/h2>
&lt;p>est-ce un Framework, est-ce un Toolkit ? je ne sais pas mais d&amp;rsquo;après wikipedia il est classé comme &lt;a href="https://en.wikipedia.org/wiki/Svelte">Framework Web&lt;/a>. Il se base sur &lt;strong>Svelte&lt;/strong>, un langage et Framework de composants et lui apporte tout un tas de fonctionnalités pour gérer les requêtes côté client ET côté serveur.&lt;/p></description></item><item><title>Goodbye Django 🫡</title><link>https://blog.sdormeau.com/posts/2023-10-04-goodbye-django/</link><pubDate>Wed, 04 Oct 2023 16:45:21 +0200</pubDate><guid>https://blog.sdormeau.com/posts/2023-10-04-goodbye-django/</guid><description>&lt;h1 id="réflexion">Réflexion&lt;/h1>
&lt;p>Après avoir longtemps réfléchis, je me suis dis que construire une appli web rapidement c&amp;rsquo;est bien, mais dans un monde toujours plus concurrentiel, être capable de faire une app drivé par l&amp;rsquo;UX/UI est un gros avantage et quelque-chose qui e manquais avec django.&lt;/p>
&lt;h2 id="svelte--sveltekit">Svelte &amp;amp; SvelteKIT&lt;/h2>
&lt;p>Traditionnellement (aka l&amp;rsquo;ancien monde), une application possède un &lt;strong>front-end&lt;/strong> et un &lt;strong>backend&lt;/strong>. Et en front-end il existe aujourd&amp;rsquo;hui des Frameworks ultra populaires comme React, Vue et Angular.&lt;/p></description></item><item><title>Rancher Desktop, an Alternative to Docker</title><link>https://blog.sdormeau.com/posts/2023-02-03-rancher-desktop-alternative-to-docker/</link><pubDate>Fri, 03 Feb 2023 20:09:29 +0100</pubDate><guid>https://blog.sdormeau.com/posts/2023-02-03-rancher-desktop-alternative-to-docker/</guid><description>&lt;p>Nous avons récemment fait face à un problème de taille au sein de mon équipe : la façon par défaut de travailler avec docker sur une machine windows est d&amp;rsquo;installer Docker Desktop. Or cet outil nécéssite une licence payant pour les entreprises de plus de 250 employés.&lt;/p>
&lt;p>&lt;strong>Comment utiliser docker sur Windows sans passer par Docker Desktop ?&lt;/strong>&lt;/p>
&lt;p>Le premier reflexe que j&amp;rsquo;ai eu a été d&amp;rsquo;installer &lt;a href="https://podman-desktop.io/">Podman Desktop&lt;/a>, une interface graphique accompagné d&amp;rsquo;un backend podman, une alternative à Docker que j&amp;rsquo;ai présenté dans l&amp;rsquo;article précédent.&lt;/p></description></item><item><title>Podman</title><link>https://blog.sdormeau.com/posts/2023-01-25-podman/</link><pubDate>Wed, 25 Jan 2023 20:31:12 +0100</pubDate><guid>https://blog.sdormeau.com/posts/2023-01-25-podman/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Dans le cadre de mes fonctions je suis face a une nouvelle problématique : Docker Desktop est la solution &amp;ldquo;Ready to go&amp;rdquo; pour utiliser Docker sur une machine de développement.&lt;/p>
&lt;p>Problème : ce logiciel nécéssite une licence pour les entreprises de plus de 250 salariés.&lt;/p>
&lt;p>Il faut donc lui trouver un remplacement, et là il existe deux options :&lt;/p>
&lt;ol>
&lt;li>installer Docker dans une sous machine linux WSL2 et faire plein de manipulation compliqués&lt;/li>
&lt;li>tester une solution alternative à Docker&lt;/li>
&lt;/ol>
&lt;h2 id="podman">Podman&lt;/h2>
&lt;p>Je suis donc parti dans la seconde direction. Découvrant ainsi &lt;a href="https://podman.io/">Podman&lt;/a>, un projet open-source qui subvient aux mêmes besoins que Docker.&lt;/p></description></item><item><title>CoreOS, gRPC et onedrive-backupper</title><link>https://blog.sdormeau.com/posts/2023-01-18-coreos-grpc-et-onedrive-backupper/</link><pubDate>Wed, 18 Jan 2023 18:48:25 +0100</pubDate><guid>https://blog.sdormeau.com/posts/2023-01-18-coreos-grpc-et-onedrive-backupper/</guid><description>&lt;h2 id="coreos-">CoreOS 🌱🐋&lt;/h2>
&lt;p>J&amp;rsquo;ai découvert hier &lt;a href="https://getfedora.org/coreos?stream=stable">CoreOS&lt;/a>, c&amp;rsquo;est un système d&amp;rsquo;exploitation orienté container en rolling release. Qu&amp;rsquo;est-ce que ça veut dire ce charabiat ? Et bien une rolling release, c&amp;rsquo;est un OS qui est tout le temps à jour.&lt;/p>
&lt;p>L&amp;rsquo;orientation container elle s&amp;rsquo;explique par quelque-chose de simple : il n&amp;rsquo;y a même pas de package manager (apt, pkg, snap, etc&amp;hellip;) installé par défaut ! On peut juste y faire tourner des container et configurer l&amp;rsquo;OS avant même de le booter.&lt;/p></description></item><item><title>Roadmap</title><link>https://blog.sdormeau.com/roadmap/roadmap/</link><pubDate>Sun, 15 Jan 2023 19:17:17 +0100</pubDate><guid>https://blog.sdormeau.com/roadmap/roadmap/</guid><description>&lt;p>Une checklist des choses que j&amp;rsquo;ai à apprendre.&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Django basics&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Authentification django&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Déploiement avec uvicorn&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> création image Docker + upload vers hub.docker.com&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Svelte + SvelteKit&lt;/li>
&lt;/ul></description></item><item><title>Try Hard Django Partie 3 🐍</title><link>https://blog.sdormeau.com/posts/2023-01-15-try-hard-django-partie-3-/</link><pubDate>Sun, 15 Jan 2023 17:48:25 +0100</pubDate><guid>https://blog.sdormeau.com/posts/2023-01-15-try-hard-django-partie-3-/</guid><description>&lt;h2 id="partie-6---fichiers-statiques">Partie 6 - Fichiers statiques&lt;/h2>
&lt;p>Finalement la partie 6 du tutoriel django était assez simple, j&amp;rsquo;avais juste besoin de redémarrer le serveur. 😋&lt;/p>
&lt;h2 id="partie-7---formulaire">Partie 7 - Formulaire&lt;/h2>
&lt;p>Dans cette partie, on plonge dans les formulaires et la customisation de la vue d&amp;rsquo;administration. on y découvre comment rajouter un champ de recherche &lt;code>search_fields&lt;/code>, un filtrage sur la date &lt;code>list_filter&lt;/code>, mais aussi, et le plus important : l&amp;rsquo;inlining.&lt;/p>
&lt;h3 id="inlining">Inlining&lt;/h3>
&lt;p>L&amp;rsquo;inlining permet de créer des sous-objets d&amp;rsquo;un objet directement dans la même vue. Par exemple créer les réponses à une question dans le même formulaire. pour ce faire on rajoute le champ &lt;code>inlines&lt;/code> dans le ModelAdmin.&lt;/p></description></item><item><title>Try Hard Django Partie 2 🐍</title><link>https://blog.sdormeau.com/posts/2023-01-15-try-hard-django-partie-2-/</link><pubDate>Sun, 15 Jan 2023 10:34:12 +0100</pubDate><guid>https://blog.sdormeau.com/posts/2023-01-15-try-hard-django-partie-2-/</guid><description>&lt;h2 id="partie-5">Partie 5&lt;/h2>
&lt;p>Au deuxième jour de mon apprentissage je me suis concentré sur uniquement la partie 5 du tutoriel Django, pour cause ! Elle parle des Tests et observe donc un volume important.&lt;/p>
&lt;p>Voilà ce que j&amp;rsquo;en retiens généralement :&lt;/p>
&lt;ul>
&lt;li>Il faut écrire des tests, peut importe la quantité (mieux vaut trop que pas assez)&lt;/li>
&lt;li>Les débutants ne fonctionnent pas en TDD, mais il faut écrire des tests quand même&lt;/li>
&lt;li>Les tests c&amp;rsquo;est super pratique quand on est en équipe (pour ne pas casser le code du collègue et vice-versa)&lt;/li>
&lt;/ul>
&lt;p>Et d&amp;rsquo;un point de vue plus &amp;ldquo;tech&amp;rdquo; :&lt;/p></description></item><item><title>Try hard Django - partie 1 🐍</title><link>https://blog.sdormeau.com/posts/2023-01-13-try-hard-django-partie-1-/</link><pubDate>Fri, 13 Jan 2023 16:32:07 +0000</pubDate><guid>https://blog.sdormeau.com/posts/2023-01-13-try-hard-django-partie-1-/</guid><description>&lt;p>Je reprend donc l&amp;rsquo;apprentissage de Django en accéléré. J&amp;rsquo;ai pu revoir les 4 première partie du tutoriel du &lt;a href="https://docs.djangoproject.com/fr/4.1/intro/tutorial04/">site officiel&lt;/a>.&lt;/p>
&lt;p>Voici ce que j&amp;rsquo;ai pu revoir lors de ces 4 parties :&lt;/p>
&lt;h2 id="partie-1">Partie 1&lt;/h2>
&lt;p>La commande &lt;code>python manage.py runserver&lt;/code> , les vues de base et le routing via le fichier &lt;code>urls.py&lt;/code> .avec la fonction &lt;code>path()&lt;/code> qui relie un url à quelque-chose.&lt;/p>
&lt;h2 id="partie-2">Partie 2&lt;/h2>
&lt;p>La deuxième partie s&amp;rsquo;ace autour de la définition des modèles dans &lt;code>models.py&lt;/code>, leur activation via le &lt;code>settings.py&lt;/code>, la création d&amp;rsquo;une migration, son dump en SQL brut et son application. On y joue également un peu avec &lt;a href="https://docs.djangoproject.com/fr/4.1/intro/tutorial02/#playing-with-the-api">l&amp;rsquo;API django&lt;/a> à travers la commande &lt;code>python manage.py shell&lt;/code>. Pour finir, cette partie introduit l&amp;rsquo;interface d&amp;rsquo;administration à travers la création du &lt;strong>superuser&lt;/strong> et l&amp;rsquo;enregistrement des modèles.&lt;/p></description></item><item><title>ChatGPT, Onedrive et Blog</title><link>https://blog.sdormeau.com/posts/2023-01-13-chatgpt-onedrive-et-blog/</link><pubDate>Fri, 13 Jan 2023 09:01:36 +0000</pubDate><guid>https://blog.sdormeau.com/posts/2023-01-13-chatgpt-onedrive-et-blog/</guid><description>&lt;p>Aujourd&amp;rsquo;hui j&amp;rsquo;ai découvert &lt;a href="https://chat.openai.com/chat">ChatGPT&lt;/a>, un chatbot propulsé par une IA ultra puissante à qui on peut demander de générer du code dans n&amp;rsquo;importe quel langage !&lt;/p>
&lt;p>Je m&amp;rsquo;en suis alors servi pour écrire un code dont je rêve depuis toujours : un script de backup vers onedrive.﻿ Et oui, tant qu&amp;rsquo;à payer un abonnement a 100 € par an pour un cloud, autant aussi y accéder aussi de manière programmatique !&lt;/p>
&lt;p>C﻿hatGPT m&amp;rsquo;a donc généré le code suivant qu&amp;rsquo;il ne reste plus qu&amp;rsquo;à adapter :&lt;/p></description></item><item><title>Hello World n°36997, le blog reprend</title><link>https://blog.sdormeau.com/posts/2023-01-05-my-first-post/</link><pubDate>Thu, 05 Jan 2023 13:52:45 +0100</pubDate><guid>https://blog.sdormeau.com/posts/2023-01-05-my-first-post/</guid><description>&lt;p>Cet article n&amp;rsquo;est ni le premier ni le dernier, j&amp;rsquo;ai fait évoluer mon blog depuis le tout début de mes études, j&amp;rsquo;ai perdu les contenus précédents dans la bataille. Je me pose donc comme objectif &lt;strong>la mise en place de backup redondant sur plusieurs sites&lt;/strong> afin de ne plus commettre cette erreur.&lt;/p>
&lt;p>L&amp;rsquo;objectif premier de ce blog est d&amp;rsquo;&lt;strong>ancrer les connaissances acquise à travers une restitution textuelle&lt;/strong>, et si par le passé je ne l&amp;rsquo;ai pas maintenu c&amp;rsquo;est probablement parce que l&amp;rsquo;objectif d&amp;rsquo;écrire tous les jours était trop grand. Je me fixe donc comme &lt;strong>nouvel objectif un minimum de deux articles par semaine.&lt;/strong>&lt;/p></description></item><item><title>À propos de ce blog</title><link>https://blog.sdormeau.com/about/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.sdormeau.com/about/about/</guid><description>les motivations de la création de ce blog</description></item></channel></rss>