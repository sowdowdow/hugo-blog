<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Slices on SDRM</title><link>https://blog.sdormeau.com/tags/slices/</link><description>Recent content in Slices on SDRM</description><generator>Hugo -- 0.133.0</generator><language>fr-fr</language><lastBuildDate>Tue, 13 Aug 2024 14:19:54 +0000</lastBuildDate><atom:link href="https://blog.sdormeau.com/tags/slices/index.xml" rel="self" type="application/rss+xml"/><item><title>Apprentissage de Golang üêÄ - partie 3</title><link>https://blog.sdormeau.com/posts/2024-08-21-apprentissage-golang-partie-3/</link><pubDate>Tue, 13 Aug 2024 14:19:54 +0000</pubDate><guid>https://blog.sdormeau.com/posts/2024-08-21-apprentissage-golang-partie-3/</guid><description>Conversion de type (casting) exemple :
var a := int(&amp;#34;2&amp;#34;) fonctions func nom(param1 int, param2 string) string {} La logique publique/priv√© s&amp;rsquo;applique toujours avec la premi√®re lettre en majuscule ou minuscule.
retour multiples func nom() (int, string) { return 1, &amp;#34;example&amp;#34; } // first var ignored _, text := nom() Array Les tableaux ont une taille fixe
var nom[5]int // ou bien tableau := [3]string{&amp;#34;bob&amp;#34;, &amp;#34;moran&amp;#34;} Slices Un Slice est un &amp;ldquo;array de taille dynamique&amp;rdquo;</description></item></channel></rss>